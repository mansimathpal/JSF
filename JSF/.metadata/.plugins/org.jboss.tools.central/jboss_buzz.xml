<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>A development roadmap for Open Data Hub</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/I1i3t3gCfKI/" /><link rel="enclosure" type="video/mp4" href="https://content.onlinexperiences.com/FMSRecording/Production/MediaCollection/VideoCollection/3484/4/320171/GitOps_for_Manufacturing_Edge.mp4" length="27262487" /><category term="Containers" /><category term="Kubernetes" /><category term="Machine Learning" /><category term="Operator" /><category term="AI as a service" /><category term="Continuous Integration" /><category term="Kubeflow" /><category term="Open Data Hub" /><category term="openshift" /><author><name>Václav Pavlín</name></author><id>https://developers.redhat.com/blog/?p=730837</id><updated>2020-06-22T07:00:14Z</updated><published>2020-06-22T07:00:14Z</published><content type="html">&lt;p&gt;Open Data Hub (ODH) is a blueprint for building an AI-as-a-Service (AIaaS) platform on Red Hat&amp;#8217;s &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;-based &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;OpenShift 4.x&lt;/a&gt;. The Open Data Hub team recently released &lt;a href="https://developers.redhat.com/blog/2020/05/07/open-data-hub-0-6-brings-component-updates-and-kubeflow-architecture/"&gt;Open Data Hub 0.6.0&lt;/a&gt;, followed up by a smaller update of &lt;a href="https://developers.redhat.com/blog/2020/06/02/open-data-hub-0-6-1-bug-fix-release-to-smooth-out-redesign-regressions/"&gt;Open Data Hub 0.6.1&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We recently got together and discussed our plans and timeline for the next two releases. Our plans are based on the &lt;a target="_blank" rel="nofollow" href="https://gitlab.com/opendatahub/opendatahub-community/-/wikis/uploads/39b75e0eee79a059fffabbf0f38d77cf/ODH_Roadmap__draft_.pdf"&gt;roadmap slide deck&lt;/a&gt; that we put together and presented during the &lt;a target="_blank" rel="nofollow" href="https://gitlab.com/opendatahub/opendatahub-community/-/wikis/Open-Data-Hub-Community-Meeting-Agenda#monday-april-6th-2020"&gt;Open Data Hub community meeting on April 6&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In this article, we present our roadmap for the next several Open Data Hub releases. We would like to emphasize that the target dates are optimistic, describing what we would like to achieve. With the current state of the world and vacation time coming up, these dates might change.&lt;br /&gt; &lt;span id="more-730837"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Open Data Hub 0.7: End of June 2020&lt;/h2&gt; &lt;p&gt;Our closest release is mainly about &lt;a href="https://developers.redhat.com/blog/2020/02/10/installing-kubeflow-v0-7-on-openshift-4-2/"&gt;Kubeflow&lt;/a&gt; 1.0 and making it available on &lt;a href="https://developers.redhat.com/products/openshift"&gt;Red Hat OpenShift&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Kubeflow 1.0 on OpenShift&lt;/h3&gt; &lt;p&gt;The primary goal of this initiative is to verify that Kubeflow 1.0 works on Red Hat OpenShift and fix the issues that we find. Another goal is to document and ideally automate some of the verification processes to start enabling &lt;a href="https://developers.redhat.com/topics/ci-cd/"&gt;continuous integration&lt;/a&gt; (CI) for Kubeflow on OpenShift.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: Because the project is quite fresh and changes frequently, we have disabled &lt;a target="_blank" rel="nofollow" href="https://www.kubeflow.org/docs/components/serving/kfserving/"&gt;KFServing&lt;/a&gt; while we work to enable &lt;a href="https://developers.redhat.com/blog/2020/02/10/installing-kubeflow-v0-7-on-openshift-4-2/"&gt;Kubeflow 0.7 on OpenShift&lt;/a&gt;. We will continue to investigate the state of KFServing and any potential issues with it as part of our work in this area.&lt;/p&gt; &lt;h3&gt;Improve Open Data Hub CI&lt;/h3&gt; &lt;p&gt;The continuous integration (CI) based on OpenShift CI is running for the &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/"&gt;odh-manifests repository&lt;/a&gt;, but the test set is minimal. The goal of this initiative is to extend and improve the tests for all components. We want to be able to verify that containers have not only started but that the components actually work—meaning we plan to add some functionality testing.&lt;/p&gt; &lt;p&gt;Another aspect of this project is to enable the CI component for other Open Data Hub repositories, mainly &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/opendatahub-operator"&gt;opendatahub-operator&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Start mixing Open Data Hub and Kubeflow components&lt;/h3&gt; &lt;p&gt;Since the inception of the Open Data Hub project on top of Kubeflow, we have planned to have the ability to mix components from Open Data Hub and Kubeflow. Currently, it&amp;#8217;s possible, but there is no promise that the components will run and work well together.&lt;/p&gt; &lt;p&gt;We have found issues with running &lt;a target="_blank" rel="nofollow" href="https://github.com/kubeflow/manifests/issues/1022"&gt;Kubeflow in custom namespaces&lt;/a&gt;. Kubeflow also heavily depends on &lt;a href="https://developers.redhat.com/topics/service-mesh/"&gt;Istio&lt;/a&gt;, which is not yet the case for Open Data Hub. For this project, we will choose a Kubeflow component and start testing it when it is running as part of Open Data Hub. (The first candidate is one of the training-job operators: &lt;a target="_blank" rel="nofollow" href="https://www.kubeflow.org/docs/components/training/tftraining/"&gt;TF job&lt;/a&gt; or &lt;a target="_blank" rel="nofollow" href="https://www.kubeflow.org/docs/components/training/pytorch/"&gt;Pytorch job&lt;/a&gt;).&lt;/p&gt; &lt;h3&gt;Add Object Storage Component&lt;/h3&gt; &lt;p&gt;Open Data Hub relies on Amazon Simple Storage Service (Amazon S3)-compatible object storage. Currently, we do not have an easy way to provide that for our users, so we plan to add a component implementing S3-compatible object storage. Such component could be the &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/cloud-computing/openshift-container-storage"&gt;OpenShift Container Storage&lt;/a&gt; (OCS) or &lt;a target="_blank" rel="nofollow" href="https://rook.io/"&gt;Rook Ceph&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Because the default installation of OCS is very resource-intensive, we will work with the team to help us with a smaller (non-production) installation that can be used for development, testing, workshops, and other use cases.&lt;/p&gt; &lt;h3&gt;Convert Data Catalog to Kustomize&lt;/h3&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://opendatahub.io/news/2019-12-15/data-catalog-in-odh.html"&gt;Data Catalog&lt;/a&gt; is the last &lt;a target="_blank" rel="nofollow" href="https://github.com/opendatahub-io/odh-manifests/issues/105"&gt;component missing&lt;/a&gt; in the latest Open Data Hub versions. We would like to convert it and provide it as part of the next release.&lt;/p&gt; &lt;h2&gt;Open Data Hub 0.8: End of August 2020&lt;/h2&gt; &lt;p&gt;For the summer release, we are focusing on automation and making sure Open Data Hub and Kubeflow work well together.&lt;/p&gt; &lt;h3&gt;Continuous deployment&lt;/h3&gt; &lt;p&gt;We will keep improving CI of Open Data Hub, but the second part of the story is continuous deployment (CD). We have two targets for this initiative: The Internal Data Hub running internally at Red Hat and an Open Data Hub instance deployed in &lt;a target="_blank" rel="nofollow" href="http://massopen.cloud/"&gt;Mass Open Cloud&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The idea is to automatically deploy new versions of Open Data Hub into staging on both of these targets. Because Open Data Hub consists of at least three main parts—the operator, Open Data Hub manifests, and the Kubeflow manifests—we need to investigate what we really mean by continuous deployment on Open Dat Hub.  Our goal is to come up with a plan for what to automate and how we will do it with regard to deployment.&lt;/p&gt; &lt;h3&gt;Universal base images (UBI) for Open Data Hub&lt;/h3&gt; &lt;p&gt;Red Hat is doing great work with developing the &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image"&gt;Red Hat Universal Base Image&lt;/a&gt; (UBI), and we want to leverage that as much as possible. The goal of this initiative is to verify that all of our components are running on UBI and work with upstream communities where that is not the case.&lt;/p&gt; &lt;h3&gt;Continue mixing Open Data Hub and Kubeflow components&lt;/h3&gt; &lt;p&gt;Assuming our experiment with mixing components in Open Data Hub 0.7  goes well, we will continue to test, fix, and verify more of these components. We will complete work on our priority list of components before we start working on the next set for Open Data Hub 0.8&lt;/p&gt; &lt;h2&gt;Open Data Hub 0.9: Autumn 2020&lt;/h2&gt; &lt;p&gt;This is the farthest release we have a rough idea for at the moment. With this release, we will focus on enterprise requirements for Open Data Hub.&lt;/p&gt; &lt;h3&gt;Disconnected deployment&lt;/h3&gt; &lt;p&gt;The disconnected deployment of Open Data Hub and Kubeflow is a big topic—especially in the financial sector and &lt;a target="_blank" rel="nofollow" href="https://content.onlinexperiences.com/FMSRecording/Production/MediaCollection/VideoCollection/3484/4/320171/GitOps_for_Manufacturing_Edge.mp4"&gt;AI on the Edge&lt;/a&gt; use cases. The Kubeflow community has made attempts to solve this issue in the past. We will need to see if we can build on this work or if we should start from scratch.&lt;/p&gt; &lt;h3&gt;UBI-based Kubeflow&lt;/h3&gt; &lt;p&gt;Along with our push for a UBI-based Open Data Hub, we would like to take a look at Kubeflow components and images and find a way to port and maintain them on UBI. Reproducibility and automation are key to the long-term success of this project.&lt;/p&gt; &lt;h2&gt;Follow the roadmap!&lt;/h2&gt; &lt;p&gt;As part of creating the new roadmap, we are also redesigning the &lt;a target="_blank" rel="nofollow" href="http://opendatahub.io/docs/roadmap/future.html"&gt;Open Data Hub Roadmap on opendatahub.io&lt;/a&gt;. We will keep this document updated so that you can always see where we are in our current and future plans for Open Data Hub.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#38;linkname=A%20development%20roadmap%20for%20Open%20Data%20Hub" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F22%2Fa-development-roadmap-for-open-data-hub%2F&amp;#038;title=A%20development%20roadmap%20for%20Open%20Data%20Hub" data-a2a-url="https://developers.redhat.com/blog/2020/06/22/a-development-roadmap-for-open-data-hub/" data-a2a-title="A development roadmap for Open Data Hub"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/22/a-development-roadmap-for-open-data-hub/"&gt;A development roadmap for Open Data Hub&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/I1i3t3gCfKI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Open Data Hub (ODH) is a blueprint for building an AI-as-a-Service (AIaaS) platform on Red Hat&amp;#8217;s Kubernetes-based OpenShift 4.x. The Open Data Hub team recently released Open Data Hub 0.6.0, followed up by a smaller update of Open Data Hub 0.6.1. We recently got together and discussed our plans and timeline for the next two [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/22/a-development-roadmap-for-open-data-hub/"&gt;A development roadmap for Open Data Hub&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">730837</post-id><dc:creator>Václav Pavlín</dc:creator><dc:date>2020-06-22T07:00:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/22/a-development-roadmap-for-open-data-hub/</feedburner:origLink></entry><entry><title>Develop and test a Quarkus client on Red Hat CodeReady Containers with Red Hat Data Grid 8.0</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/4tzXt7GOY24/" /><category term="Big Data" /><category term="Java" /><category term="Kubernetes" /><category term="Quarkus" /><category term="codeready" /><category term="development environment" /><category term="Infinispan" /><category term="openshift" /><author><name>Durgesh Anaokar</name></author><id>https://developers.redhat.com/blog/?p=730637</id><updated>2020-06-19T07:00:23Z</updated><published>2020-06-19T07:00:23Z</published><content type="html">&lt;p&gt;This article is about my experience installing &lt;a href="https://developers.redhat.com/products/datagrid/overview"&gt;Red Hat Data Grid (RHDG)&lt;/a&gt; on &lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;Red Hat CodeReady Containers (CRC)&lt;/a&gt; so that I could set up a local environment to develop and test a Quarkus Infinispan client. I started by installing CodeReady Containers and then installed Red Hat Data Grid. I am also on a learning path for &lt;a href="https://developers.redhat.com/products/quarkus/getting-started"&gt;Quarkus&lt;/a&gt;, so my last step was to integrate the &lt;a target="_blank" rel="nofollow" href="https://quarkus.io/guides/infinispan-client"&gt;Quarkus Infinispan&lt;/a&gt; client into my new development environment.&lt;/p&gt; &lt;p&gt;Initially, I tried connecting the Quarkus client to my locally running instance of Data Grid. Later, I decided I wanted to create an environment where I could test and debug Data Grid on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift 4&lt;/a&gt;. I tried installing Data Grid on OpenShift 4 in a shared environment, but maintaining that environment was challenging. Through trial-and-error, I found that it was better to install Red Hat Data Grid on CodeReady Containers and use that for my local development and testing environment.&lt;/p&gt; &lt;p&gt;In this quick tutorial, I guide you through setting up a local environment to develop and test a Quarkus client—in this case, Quarkus Infinispan. The process consists of three steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Install and run CodeReady Containers.&lt;/li&gt; &lt;li&gt;Install Data Grid on CodeReady Containers.&lt;/li&gt; &lt;li&gt;Integrate the Quarkus Infinispan client into the new development environment.&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;span id="more-730637"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Step 1: Install and run CodeReady Containers&lt;/h2&gt; &lt;p&gt;To start, &lt;a href="https://developers.redhat.com/products/codeready-containers"&gt;download the current version of CodeReady Containers&lt;/a&gt;. If you need installation instructions, see &lt;a href="https://developers.redhat.com/blog/2019/09/05/red-hat-openshift-4-on-your-laptop-introducing-red-hat-codeready-containers/"&gt;this guide from the CodeReady Containers development team.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;After I installed CodeReady Containers, I ran the following command to set it up and start it in the same sequence:&lt;/p&gt; &lt;pre&gt;# crc setup # crc start &lt;/pre&gt; &lt;p&gt;Starting your CRC installation automatically starts OpenShift. You can check the logs at https://api.crc.testing:6443 to confirm that OpenShift is running. In the logs, you will also see the following login details:&lt;/p&gt; &lt;pre&gt;[INFO]"To access the cluster, first set up your environment by following 'crc oc-env' instructions" [INFO]"Then you can access it by running 'oc login -u developer -p developer https://api.crc.testing:6443'" [INFO]"To login as an admin, run 'oc login -u kubeadmin -p 8rynV-SeYLc-h8Ij7-YPYcz https://api.crc.testing:6443'" &lt;/pre&gt; &lt;p&gt;That&amp;#8217;s it for the first step.&lt;/p&gt; &lt;h2&gt;Step 2: Install Red Hat Data Grid on CodeReady Containers&lt;/h2&gt; &lt;p&gt;Next, you want to install the Data Grid Operator on &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; (OCP). You can use either the command-line interface (CLI) or the OCP user interface (UI). I chose to use the UI for my installation. Here are the installation steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log in to the OCP console, as shown in Figure 1. &lt;p&gt;&lt;div id="attachment_731347" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-50-07-CROP.png"&gt;&lt;img aria-describedby="caption-attachment-731347" class="wp-image-731347 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-50-07-CROP-1024x507.png" alt="A screenshot of the login dialog for OCP." width="640" height="317" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-50-07-CROP-1024x507.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-50-07-CROP-300x149.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-50-07-CROP-768x380.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-731347" class="wp-caption-text"&gt;Figure 1. Log in to the OpenShift Container Platform console.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Create a project to install the Data Grid Operator, as shown in Figure 2. &lt;p&gt;&lt;div id="attachment_731357" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-49-42-CROP.png"&gt;&lt;img aria-describedby="caption-attachment-731357" class="wp-image-731357 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-49-42-CROP-1024x510.png" alt="A screenshot of the OCP project dialog." width="640" height="319" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-49-42-CROP-1024x510.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-49-42-CROP-300x150.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-11-49-42-CROP-768x383.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-731357" class="wp-caption-text"&gt;Figure 2. Create a project to install the Data Grid Operator.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Create an instance of the Data Grid Operator. Doing this also creates the Data Grid pod, as shown in Figure 3. &lt;p&gt;&lt;div id="attachment_731387" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-28-09-CROP.png"&gt;&lt;img aria-describedby="caption-attachment-731387" class="wp-image-731387 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-28-09-CROP-1024x508.png" alt="A screenshot of the dialog to create an instance of the Data Grid Operator." width="640" height="318" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-28-09-CROP-1024x508.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-28-09-CROP-300x149.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-28-09-CROP-768x381.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-731387" class="wp-caption-text"&gt;Figure 3. Create an instance of the Data Grid Operator&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Check the running pods on OCP: &lt;pre&gt;$ oc get pods NAME READY STATUS RESTARTS AGE example-infinispan-0 1/1 Running 0 6d4h infinispan-operator-77cd666d7d-xjqcj 1/1 Running 0 6d4h &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Gather information for your next installation&lt;/h3&gt; &lt;p&gt;After you confirm that Data Grid is installed, take note of the service IP for the Data Grid service. You will need this information when you install the Quarkus Infinispan client.&lt;/p&gt; &lt;pre&gt;$ oc get svc NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE example-infinispan ClusterIP 172.30.51.239 &amp;#38;amp;amp;amp;lt;none&amp;#38;amp;amp;amp;gt; 11222/TCP 6d4h &lt;/pre&gt; &lt;p&gt;Next, check the user ID for Data Grid and the &lt;code&gt;clustered-openshift.xml&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ oc rsh example-infinispan-0 sh-4.4$ cat /opt/infinispan/server/conf/users.properties #$REALM_NAME=default$ #Tue Jun 09 03:58:58 GMT 2020 developer=RSRKP8snxVdCbQP3 operator=brw2JVxLQw1gsF4M &lt;/pre&gt; &lt;p&gt;Finally, check the configuration files details for your &lt;code&gt;sasl-mechanism&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ oc rsh example-infinispan-0 sh-4.4$ cat /opt/infinispan/server/conf/infinispan.xml &lt;/pre&gt; &lt;p&gt;Figure 4 shows the correct output:&lt;/p&gt; &lt;div id="attachment_731457" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-10-09-25-59-CROP.png"&gt;&lt;img aria-describedby="caption-attachment-731457" class="wp-image-731457 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-10-09-25-59-CROP-1024x402.png" alt="A screenshot of the output." width="640" height="251" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-10-09-25-59-CROP-1024x402.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-10-09-25-59-CROP-300x118.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-10-09-25-59-CROP-768x302.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-731457" class="wp-caption-text"&gt;Figure 4. The output from a successful Red Hat Data Grid installation.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Install and run the Quarkus Infinispan client&lt;/h2&gt; &lt;p&gt;Finally, you can install and run the Quarkus Infinispan client.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://code.quarkus.io/"&gt;Download the client from Quarkus.io&lt;/a&gt;, as shown in Figure 5. &lt;p&gt;&lt;div id="attachment_731407" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-44-08-CROP.png"&gt;&lt;img aria-describedby="caption-attachment-731407" class="wp-image-731407 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-44-08-CROP-1024x531.png" alt="A screenshot of the download page on Quarkus.io." width="640" height="332" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-44-08-CROP-1024x531.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-44-08-CROP-300x156.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screenshot-from-2020-06-09-12-44-08-CROP-768x398.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-731407" class="wp-caption-text"&gt;Figure 5. Download the Quarkus Infinispan client from Quarkus.io.&lt;/p&gt;&lt;/div&gt;&lt;/li&gt; &lt;li&gt;Once you have Quarkus Infinispan, extract the client code. Test the code against your local Data Grid instance to ensure that it is working.&lt;/li&gt; &lt;li&gt;Assuming the code works, add the following values to the Infinispan client&amp;#8217;s &lt;code&gt;application.properties&lt;/code&gt; file (see the &lt;code&gt;pod/service&lt;/code&gt; directory for these values): &lt;pre&gt;# The IP should be CLUSTER-IP shown by oc get svc for RHDG deployment Quarkus.infinispan-client.server-list=172.30.51.239:11222 #The following would be the authentication details for the RHDG installed Quarkus.infinispan-client.auth-username=developer Quarkus.infinispan-client.auth-password=RSRKP8snxVdCbQP3 Quarkus.infinispan-client.use-auth=true Quarkus.infinispan-client.sasl-mechanism=DIGEST-MD5 #you can choose the sasl machenism and set it here Quarkus.kubernetes-client.trust-certs=true Quarkus.infinispan-client.client-intelligence=BASIC #The following properties are required to push the build to OCP Quarkus.openshift.expose=true Quarkus.kubernetes.deployment-target=openshift Quarkus.s2i.base-jvm-image=registry.access.redhat.com/openjdk/openjdk-11-rhel7 &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;After you have updated the &lt;code&gt;application.properties&lt;/code&gt; file, run this command at the project&amp;#8217;s base directory: &lt;pre&gt;./mvnw clean package -DQuarkus.kubernetes.deploy=true &lt;/pre&gt; &lt;p&gt;The application will be deployed to CodeReady Containers, and you should see the following logs:&lt;/p&gt; &lt;pre&gt;[INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Deploying to openshift server: https://api.crc.testing:6443/ in namespace: testrhdg. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: ServiceAccount infinispan-client-quickstart. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: Service infinispan-client-quickstart. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: ImageStream infinispan-client-quickstart. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: ImageStream openjdk-11-rhel7. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: BuildConfig infinispan-client-quickstart. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: DeploymentConfig infinispan-client-quickstart. [INFO] [io.Quarkus.kubernetes.deployment.KubernetesDeployer] Applied: Route infinispan-client-quickstart. [INFO] [io.Quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 120321ms [INFO] ------------------------------------------------------------------------ [INFO] BUILD SUCCESS [INFO] ------------------------------------------------------------------------ [INFO] Total time: 02:06 min [INFO] Finished at: 2020-06-10T07:04:53+05:30 [INFO] ------------------------------------------------------------------------ &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Check your installation&lt;/h3&gt; &lt;p&gt;You can run additional checks to ensure that the Infinispan client is running in your development environment. First, check the new pods that were created with the Quarkus Infinispan build:&lt;/p&gt; &lt;pre&gt;$ oc get pods NAME READY STATUS RESTARTS AGE example-infinispan-0 1/1 Running 0 6d22h infinispan-client-quickstart-1-build 0/1 Completed 0 2m50s infinispan-client-quickstart-1-deploy 0/1 Completed 0 72s infinispan-client-quickstart-1-hlwg6 1/1 Running 0 66s infinispan-operator-77cd666d7d-xjqcj 1/1 Running 0 6d22h &lt;/pre&gt; &lt;p&gt;Second, check the route for the newly deployed service and access it:&lt;/p&gt; &lt;pre&gt;$ oc get routes NAME HOST/PORT PATH SERVICES PORT TERMINATION WILDCARD infinispan-client-quickstart infinispan-client-quickstart-testrhdg.apps-crc.testing / infinispan-client-quickstart 8081 None &lt;/pre&gt; &lt;p&gt;Now you can access the client in any web browser at http://infinispan-client-quickstart-testrhdg.apps-crc.testing/infinispan, or on the command line, and play with it. As an example, you could add more interfaces to the client code, which would allow you to perform different operations with Red Hat Data Grid.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, I showed you what I did to create a client for Infinispan with the help of Quarkus. I also showed you how to run the client on OpenShift 4.x for an installed Red Hat Data Grid 8.0 instance. There might be a more sophisticated way to implement the same solution or find values from the OpenShift cluster. I hope sharing my experience will be helpful to others.&lt;/p&gt; &lt;p&gt;Download the source code for these examples from my &lt;a target="_blank" rel="nofollow" href="https://github.com/durgeshanaokar/testprojects/tree/master/infinispan-client-quickstart"&gt;Infinispan Client Quickstart&lt;/a&gt; on GitHub.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#38;linkname=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F19%2Fdevelop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0%2F&amp;#038;title=Develop%20and%20test%20a%20Quarkus%20client%20on%20Red%20Hat%20CodeReady%20Containers%20with%20Red%20Hat%20Data%20Grid%208.0" data-a2a-url="https://developers.redhat.com/blog/2020/06/19/develop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0/" data-a2a-title="Develop and test a Quarkus client on Red Hat CodeReady Containers with Red Hat Data Grid 8.0"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/19/develop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0/"&gt;Develop and test a Quarkus client on Red Hat CodeReady Containers with Red Hat Data Grid 8.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/4tzXt7GOY24" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;This article is about my experience installing Red Hat Data Grid (RHDG) on Red Hat CodeReady Containers (CRC) so that I could set up a local environment to develop and test a Quarkus Infinispan client. I started by installing CodeReady Containers and then installed Red Hat Data Grid. I am also on a learning path [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/19/develop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0/"&gt;Develop and test a Quarkus client on Red Hat CodeReady Containers with Red Hat Data Grid 8.0&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">730637</post-id><dc:creator>Durgesh Anaokar</dc:creator><dc:date>2020-06-19T07:00:23Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/19/develop-and-test-a-quarkus-client-on-red-hat-codeready-containers-with-red-hat-data-grid-8-0/</feedburner:origLink></entry><entry><title>Camel K 1.0: The serverless integration platform goes GA</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZbNlfwENOhY/" /><category term="Knative" /><category term="Kubernetes" /><category term="Operator" /><category term="Serverless" /><category term="Camel K" /><category term="cloud integration" /><category term="cloud native" /><category term="openshift" /><author><name>Nicola Ferraro</name></author><id>https://developers.redhat.com/blog/?p=731777</id><updated>2020-06-18T07:00:48Z</updated><published>2020-06-18T07:00:48Z</published><content type="html">&lt;p&gt;After many months of waiting, &lt;a href="https://github.com/apache/camel-k/releases/tag/1.0.0"&gt;Apache Camel K 1.0&lt;/a&gt; is finally here! This groundbreaking project introduces developers to cloud-native application development and automated cloud configurations without breaking a sweat. With the 1.0 general availability (GA) release, Apache Camel K is more stable than ever, with performance improvements that developers will appreciate.&lt;/p&gt; &lt;p&gt;&lt;span id="more-731777"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;About Camel K&lt;/h2&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2020/05/12/six-reasons-to-love-camel-k/"&gt;Apache Camel K&lt;/a&gt; is a lightweight integration platform that runs natively on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. It uses the &lt;a href="https://developers.redhat.com/topics/kubernetes/operators"&gt;Operator pattern&lt;/a&gt; to simplify the application development lifecycle. As an example, you can use Operators to easily connect to Apache Kafka or &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/resources/amq-streams-datasheet"&gt;Red Hat AMQ Streams&lt;/a&gt;. Camel K also comes with its own built-in tooling and many pre-built enterprise patterns for easy reuse.&lt;/p&gt; &lt;p&gt;Apache Camel K is built for performance, with fast build times, a small memory footprint, and fast startup times. It also integrates seamlessly with &lt;a href="https://developers.redhat.com/blog/2020/04/23/knative-cookbook-building-effective-serverless-applications-with-kubernetes-and-openshift/"&gt;Knative&lt;/a&gt; for &lt;a href="https://developers.redhat.com/topics/serverless-architecture/"&gt;serverless&lt;/a&gt; workloads that can automatically scale up and down.&lt;/p&gt; &lt;h2&gt;Learn more about the Camel K 1.0 GA release&lt;/h2&gt; &lt;p&gt;In latest Camel K 1.0 release, monitoring and tracing capabilities are now built-in, along with transparent logging to improve debugging. You can also use Camel K to define &lt;code&gt;cron&lt;/code&gt; jobs on the cloud.&lt;/p&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-camelk"&gt;Tooling for Camel K&lt;/a&gt; is now also available for the VS Code IDE, adding auto-completion and error highlighting to integration files, and the &lt;a href="https://github.com/apache/camel-k/releases/tag/1.0.0"&gt;&amp;#8220;kamel&amp;#8221; CLI&lt;/a&gt; contains many features aimed to improve the overall user experience.&lt;/p&gt; &lt;p&gt;To learn more about Apache Camel K and get a detailed technical overview of what is new and improved with the 1.0 GA release, see my &lt;a href="https://camel.apache.org/blog/2020/06/camel-k-release-1.0.0/"&gt;release announcement&lt;/a&gt; on the Apache Camel Blog. My post there guides you through the new cool features in the 1.0 GA release and helps you get started with Apache Camel K.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#38;linkname=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fcamel-k-1-0-the-serverless-integration-platform-goes-ga%2F&amp;#038;title=Camel%20K%201.0%3A%20The%20serverless%20integration%20platform%20goes%20GA" data-a2a-url="https://developers.redhat.com/blog/2020/06/18/camel-k-1-0-the-serverless-integration-platform-goes-ga/" data-a2a-title="Camel K 1.0: The serverless integration platform goes GA"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/18/camel-k-1-0-the-serverless-integration-platform-goes-ga/"&gt;Camel K 1.0: The serverless integration platform goes GA&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZbNlfwENOhY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;After many months of waiting, Apache Camel K 1.0 is finally here! This groundbreaking project introduces developers to cloud-native application development and automated cloud configurations without breaking a sweat. With the 1.0 general availability (GA) release, Apache Camel K is more stable than ever, with performance improvements that developers will appreciate. About Camel K Apache [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/18/camel-k-1-0-the-serverless-integration-platform-goes-ga/"&gt;Camel K 1.0: The serverless integration platform goes GA&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">731777</post-id><dc:creator>Nicola Ferraro</dc:creator><dc:date>2020-06-18T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/18/camel-k-1-0-the-serverless-integration-platform-goes-ga/</feedburner:origLink></entry><entry><title>IoT Developer Survey takes a turn to edge computing: Deadline June 26 2020</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WKf3AJMq5ks/" /><category term="Internet of Things" /><category term="Kubernetes" /><category term="Open source" /><category term="Eclipse Foundation" /><category term="edge computing" /><category term="iot developer" /><category term="iot edge" /><author><name>Ishu Verma</name></author><id>https://developers.redhat.com/blog/?p=730137</id><updated>2020-06-18T07:00:05Z</updated><published>2020-06-18T07:00:05Z</published><content type="html">&lt;p&gt;The &lt;a target="_blank" rel="nofollow" href="https://iot.eclipse.org/"&gt;Eclipse IoT Working Group&lt;/a&gt; has launched the annual &lt;a target="_blank" rel="nofollow" href="https://www.surveymonkey.com/r/Redhatblog20"&gt;IoT Developer Survey&lt;/a&gt;. This survey is in its sixth edition and is the largest developer survey in the Internet-of-Things (IoT) open source industry. The deadline to submit your responses is June 26, 2020.&lt;/p&gt; &lt;h2&gt;About the IoT Developer Survey&lt;/h2&gt; &lt;p&gt;This year&amp;#8217;s IoT Developer Survey will provide valuable insights into current trends in the IoT-industry landscape and the requirements and challenges that IoT communities are facing. The survey will also highlight how these trends are shaping and impacting businesses and enterprise strategies for software vendors, hardware manufacturers, service providers, original equipment manufacturers (OEMs), enterprises of all sizes, and individual developers.&lt;/p&gt; &lt;p&gt;&lt;span id="more-730137"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Edge computing in IoT&lt;/h3&gt; &lt;p&gt;For the first time, there are going to be questions about &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/topics/edge-computing/what-is-edge-computing"&gt;edge computing&lt;/a&gt; into the IoT Developer Survey. These questions will help provide a detailed framework for developers implementing edge computing technologies into their IoT solutions. As a developer, your responses to questions about architecture, security, connectivity, deployment technologies, development tools, and more will shape the roadmap of the &lt;a target="_blank" rel="nofollow" href="https://iot.eclipse.org/"&gt;Eclipse IoT Working Group&lt;/a&gt; and the &lt;a target="_blank" rel="nofollow" href="https://edgenative.eclipse.org/"&gt;Eclipse Edge Native Working Group&lt;/a&gt;. Both teams focus on developer requirements and priorities for cloud-to-edge IoT development.&lt;/p&gt; &lt;h3&gt;What we&amp;#8217;ve learned so far&lt;/h3&gt; &lt;p&gt;The &lt;a target="_blank" rel="nofollow" href="https://blogs.eclipse.org/post/jameka-woodberry/2019-iot-developer-survey-results-are-now-available"&gt;2019 IoT Developer Survey&lt;/a&gt; surveyed developers to gain on-the-ground understanding and insights into how IoT solutions are being built, as well as identifying developers&amp;#8217; top choices for architectures, technologies, and tools in the IoT open source ecosystem. That edition highlighted that IoT development is expanding at a rapid pace, fueled by the growth of investments in predominantly industrial markets. Developers&amp;#8217; top technology choices revealed that they were focused on areas like IoT platforms, home automation, and industrial automation.&lt;/p&gt; &lt;h2&gt;Help shape the IoT open source ecosystem&lt;/h2&gt; &lt;p&gt;Have your say and contribute to shaping the IoT open source ecosystem! If you are a developer in the IoT open source ecosystem, we encourage you to add your voice to the &lt;a target="_blank" rel="nofollow" href="https://www.surveymonkey.com/r/Redhatblog20"&gt;IoT Developer Survey&lt;/a&gt;. Your contributions will help the industry gain the broadest possible view of the state of IoT technologies in the context of commercial IoT. Completing the survey takes less than 10 minutes.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: The IoT Developer Survey survey is completely anonymous. The data collected is used solely for the purpose of this survey, and we will not share it with third parties. We will use the requested email address only to share survey results and analysis with you.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#38;linkname=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F18%2Fiot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020%2F&amp;#038;title=IoT%20Developer%20Survey%20takes%20a%20turn%20to%20edge%20computing%3A%20Deadline%20June%2026%202020" data-a2a-url="https://developers.redhat.com/blog/2020/06/18/iot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020/" data-a2a-title="IoT Developer Survey takes a turn to edge computing: Deadline June 26 2020"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/18/iot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020/"&gt;IoT Developer Survey takes a turn to edge computing: Deadline June 26 2020&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WKf3AJMq5ks" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Eclipse IoT Working Group has launched the annual IoT Developer Survey. This survey is in its sixth edition and is the largest developer survey in the Internet-of-Things (IoT) open source industry. The deadline to submit your responses is June 26, 2020. About the IoT Developer Survey This year&amp;#8217;s IoT Developer Survey will provide valuable [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/18/iot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020/"&gt;IoT Developer Survey takes a turn to edge computing: Deadline June 26 2020&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">730137</post-id><dc:creator>Ishu Verma</dc:creator><dc:date>2020-06-18T07:00:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/18/iot-developer-survey-takes-a-turn-to-edge-computing-deadline-june-26-2020/</feedburner:origLink></entry><entry><title>Red Hat Runtimes brings Vert.x and Dekorate to Spring Boot 2.2.6</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/W0rfYP8L60k/" /><category term="Event-Driven" /><category term="Java" /><category term="Modern App Dev" /><category term="Spring Boot" /><category term="containers Java" /><category term="Java EE" /><category term="openshift" /><category term="spring reactive" /><category term="vert.x" /><author><name>Syed M Shaaf</name></author><id>https://developers.redhat.com/blog/?p=701247</id><updated>2020-06-17T07:00:48Z</updated><published>2020-06-17T07:00:48Z</published><content type="html">&lt;p&gt;The latest update to &lt;a href="https://developers.redhat.com/middleware/"&gt;Red Hat Runtimes&lt;/a&gt; features support for &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_support_for_spring_boot/2.2/html/release_notes_for_spring_boot_2.2/"&gt;Spring Boot 2.2.6&lt;/a&gt;, along with the &lt;a target="_blank" rel="nofollow" href="https://github.com/dekorateio/dekorate"&gt;Dekorate project&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://spring.io/reactive"&gt;Spring Reactive&lt;/a&gt;. Together, these technologies are a boost for developers building Spring-based applications on the &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;. In this article, I present the highlights of this update.&lt;/p&gt; &lt;p&gt;&lt;span id="more-701247"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;About Red Hat Runtimes&lt;/strong&gt;: &lt;a href="https://developers.redhat.com/middleware/"&gt;Red Hat Runtimes&lt;/a&gt; provides a set of comprehensive frameworks, runtimes, and programming languages for developers, architects, and IT leaders with cloud-native application development needs. Developers use Red Hat Runtimes to access a variety of application runtimes on the &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Dekorate&lt;/h2&gt; &lt;p&gt;&lt;a target="_blank" rel="nofollow" href="https://github.com/dekorateio/dekorate"&gt;Dekorate&lt;/a&gt; is an extensive framework that allows developers to abstract the details of editing and avoid hours of tedious work writing XML, YAML, and JSON files. Instead, Dekorate simply &lt;a href="https://developers.redhat.com/blog/2019/08/15/how-to-use-dekorate-to-create-kubernetes-manifests/"&gt;generates these manifests at compile time&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Spring Reactive&lt;/h2&gt; &lt;p&gt;The latest release of Red Hat Runtimes brings the benefits of &lt;a href="https://developers.redhat.com/blog/2019/08/30/extending-support-for-spring-boot-2-1-6-and-spring-reactive/"&gt;Project Reactor and Spring WebFlux&lt;/a&gt; to OpenShift and standalone Red Hat Enterprise Linux (RHEL) deployments. In addition to the Spring Boot version update, this release includes a &lt;a href="https://developers.redhat.com/blog/2020/05/25/red-hat-build-of-eclipse-vert-x-3-9-brings-fluent-api-query/"&gt;set of Eclipse Vert.x extensions&lt;/a&gt; for the Spring Boot runtime. Among the Vert.x extensions is an asynchronous I/O API for reactively handling network communications between application services. These additions extend Spring WebFlux&amp;#8217;s reactive capabilities while retaining Spring Boot&amp;#8217;s abstraction and rapid prototyping capabilities.&lt;/p&gt; &lt;h2&gt;Red Hat support for Spring Boot&lt;/h2&gt; &lt;p&gt;The Red Hat Runtimes team is continuously updating and improving the documentation for building Spring Boot applications on OpenShift and RHEL. Please see the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_support_for_spring_boot/2.2/html/release_notes_for_spring_boot_2.2/"&gt;Spring Boot 2.2.6 release notes&lt;/a&gt; and the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_support_for_spring_boot/2.2/html/spring_boot_runtime_guide/"&gt;Spring Boot Runtime Guide&lt;/a&gt; for more details about Red Hat&amp;#8217;s support for Spring Boot.&lt;/p&gt; &lt;h3&gt;Developer interactive learning scenarios&lt;/h3&gt; &lt;p&gt;Red Hat offers a variety of &lt;a target="_blank" rel="nofollow" href="https://learn.openshift.com/middleware/"&gt;self-paced scenarios&lt;/a&gt; to help you learn how to solve real-world problems with Red Hat Runtimes. Each scenario provides a preconfigured Red Hat OpenShift instance that you can access from your browser without any downloads or configuration. You can use the OpenShift instance to &lt;a target="_blank" rel="nofollow" href="https://learn.openshift.com/middleware/courses/middleware-spring-boot/"&gt;experiment with Spring Boot&lt;/a&gt; or to learn about other runtimes and technologies. Figure 1 shows a variety of available scenarios.&lt;/p&gt; &lt;div id="attachment_619977" class="wp-caption aligncenter"&gt; &lt;div id="attachment_619977" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://learn.openshift.com/middleware/courses/middleware-spring-boot/" target="_blank" rel="nofollow noopener noreferrer"&gt;&lt;img aria-describedby="caption-attachment-619977" class="wp-image-619977 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2019/08/Screen-Shot-2019-08-14-at-3.54.45-PM-1024x631.png" alt="A screenshot showing nine interactive learning modules on the Red Hat Interactive Courses homepage." width="640" height="394" aria-describedby="caption-attachment-619977" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/08/Screen-Shot-2019-08-14-at-3.54.45-PM-1024x631.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/Screen-Shot-2019-08-14-at-3.54.45-PM-300x185.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/Screen-Shot-2019-08-14-at-3.54.45-PM-768x474.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/Screen-Shot-2019-08-14-at-3.54.45-PM.png 1093w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-619977" class="wp-caption-text"&gt;Figure 1. Self-paced interactive scenarios from Red Hat.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Red Hat support for Spring Boot&lt;/h2&gt; &lt;p&gt;Support for &lt;a href="https://developers.redhat.com/topics/spring-boot/"&gt;Spring Boot&lt;/a&gt; is available to Red Hat customers through a subscription to &lt;a href="https://developers.redhat.com/products/rhoar/overview/"&gt;Red Hat Runtimes&lt;/a&gt;. Contact your local Red Hat representative or &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/about/contact/sales"&gt;Red Hat Sales&lt;/a&gt; to find out how you can enjoy world-class support from Red Hat and our global partner network.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note&lt;/strong&gt;: Moving forward, customers can expect updates to Spring Boot and other runtimes to follow the Red Hat &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/support/policy/updates/jboss_notes/"&gt;product update and support lifecycle&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;What&amp;#8217;s next for Spring Boot in Red Hat Runtimes&lt;/h3&gt; &lt;p&gt;The Red Hat Runtimes Spring Boot team is continually taking &lt;a target="_blank" rel="nofollow" href="https://issues.jboss.org/projects/SB"&gt;feedback&lt;/a&gt; from customers and the wider community of open source developers, as well as tracking the changes in &lt;a href="https://github.com/spring-projects/spring-boot/releases" target="_blank" target="_blank" rel="nofollow" noreferrer"&gt;upstream Spring Boot releases&lt;/a&gt;. The team will continue to update the Red Hat Runtimes support for Spring Boot based on those factors, as well as considering additional modules from Red Hat and the larger &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; and Spring communities.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The latest Red Hat Runtimes update was developed by Red Hat&amp;#8217;s Application Runtimes Product and Engineering team along with the &lt;a target="_blank" rel="nofollow" href="https://snowdrop.me/"&gt;Snowdrop&lt;/a&gt; upstream community. These teams collaborated over many hours of development, testing, writing documentation, more testing, and incorporating contributions from the wider Red Hat community of customers, partners, and Spring developers. We hope that it meets or exceeds your expectations!&lt;/p&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#38;linkname=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6%2F&amp;#038;title=Red%20Hat%20Runtimes%20brings%20Vert.x%20and%20Dekorate%20to%20Spring%20Boot%202.2.6" data-a2a-url="https://developers.redhat.com/blog/2020/06/17/red-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6/" data-a2a-title="Red Hat Runtimes brings Vert.x and Dekorate to Spring Boot 2.2.6"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/red-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6/"&gt;Red Hat Runtimes brings Vert.x and Dekorate to Spring Boot 2.2.6&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/W0rfYP8L60k" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The latest update to Red Hat Runtimes features support for Spring Boot 2.2.6, along with the Dekorate project and Spring Reactive. Together, these technologies are a boost for developers building Spring-based applications on the Red Hat OpenShift Container Platform. In this article, I present the highlights of this update. About Red Hat Runtimes: Red Hat [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/red-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6/"&gt;Red Hat Runtimes brings Vert.x and Dekorate to Spring Boot 2.2.6&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">701247</post-id><dc:creator>Syed M Shaaf</dc:creator><dc:date>2020-06-17T07:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/17/red-hat-runtimes-brings-vert-x-and-dekorate-to-spring-boot-2-2-6/</feedburner:origLink></entry><entry><title>Red Hat JBoss Enterprise Application Platform expansion pack 1.0 released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/EwW43vSoYow/" /><category term="Containers" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="Jakarta EE" /><category term="jboss" /><category term="MicroProfile" /><category term="OpenAPI" /><category term="openshift" /><author><name>James Falkner</name></author><id>https://developers.redhat.com/blog/?p=731627</id><updated>2020-06-17T07:00:44Z</updated><published>2020-06-17T07:00:44Z</published><content type="html">&lt;p&gt;Red Hat recently released the first &lt;a href="https://developers.redhat.com/products/eap/overview"&gt;Red Hat JBoss Enterprise Application Platform expansion pack (JBoss EAP XP)&lt;/a&gt; version 1.0. This version enables JBoss EAP developers to build &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; microservices using Eclipse MicroProfile 3.3 APIs while continuing to also support Jakarta EE 8. This article goes into detail on the nature of this new offering and an easy way to get started.&lt;/p&gt; &lt;h2&gt;Introduction to JBoss EAP expansion packs and Eclipse MicroProfile&lt;/h2&gt; &lt;p&gt;Organizations that have already embarked on—or are thinking about starting—a digital transformation journey are assessing and looking for ways to leverage their Java EE/Jakarta EE expertise. IT development and operations have built Java expertise over years, and there is a challenge to balance their existing skill base with new technologies, such as &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt;, &lt;a href="https://developers.redhat.com/topics/api-management/"&gt;APIs&lt;/a&gt;, &lt;a href="https://developers.redhat.com/topics/containers/"&gt;container&lt;/a&gt;-based architectures, and reactive programming. &lt;a target="_blank" rel="nofollow" href="https://microprofile.io"&gt;Eclipse MicroProfile&lt;/a&gt; is an open source project and one of those technologies that enables and optimizes the development of microservices while using familiar Java EE technologies and APIs.&lt;/p&gt; &lt;p&gt;You can think of MicroProfile as a minimal standard profile for Java microservices. As with Jakarta EE, MicroProfile implementations across different vendors are fully interoperable. You can read more about MicroProfile in the free e-book &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/resources/enterprise-java-microservices-ebook"&gt;Enterprise Java microservices with Eclipse MicroProfile&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;By using this expansion pack with &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/jboss-middleware/application-platform"&gt;Red Hat JBoss Enterprise Application Platform&lt;/a&gt;, which is part of &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/products/runtimes"&gt;Red Hat Runtimes&lt;/a&gt;, developers can use JBoss EAP as a MicroProfile-compliant platform. This release simplifies the inherent complexity of developing cloud-native applications on JBoss EAP with MicroProfile. The expansion pack is a separate downloadable distribution that can be applied on top of existing JBoss EAP servers, or you can use the container images available for use with &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/cloud-computing/openshift"&gt;Red Hat OpenShift&lt;/a&gt; when deploying JBoss EAP on OpenShift.&lt;/p&gt; &lt;h2&gt;Test driving a sample app&lt;/h2&gt; &lt;p&gt;As outlined in the documentation, the expansion pack is distributed as a &lt;em&gt;patch&lt;/em&gt;, which is applied using the JBoss EAP XP &lt;em&gt;Patch Manager&lt;/em&gt;. To quickly see how this works, let&amp;#8217;s take a test drive. You&amp;#8217;ll need a few developer tools like &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/products/openjdk/"&gt;OpenJDK 11&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://git-scm.com/downloads"&gt;Git&lt;/a&gt;, &lt;a target="_blank" rel="nofollow" href="https://maven.apache.org/download.cgi"&gt;Maven&lt;/a&gt;, a text editor, and utilities like &lt;code&gt;&lt;a target="_blank" rel="nofollow" href="https://curl.haxx.se/"&gt;curl&lt;/a&gt;&lt;/code&gt;, along with having your Red Hat Developer credentials ready for the first step:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;&lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform&amp;#38;downloadType=distributions"&gt;Download JBoss EAP 7.3.0&lt;/a&gt;&lt;/strong&gt;: (You will need your Red Hat Developer credentials for this step.) Save it to your local desktop and unzip it into any folder you like, under which you&amp;#8217;ll find a new folder called &lt;code&gt;jboss-eap-7.3.0&lt;/code&gt;. I&amp;#8217;ll extract the zip file to the &lt;code&gt;/tmp&lt;/code&gt; folder for brevity: &lt;pre&gt;$ unzip -d /tmp ~/Downloads/jboss-eap-7.3.0.zip&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform&amp;#38;downloadType=patches&amp;#38;version=7.3"&gt;&lt;strong&gt;Download the JBoss EAP 7.3 Update 01 Patch&lt;/strong&gt;&lt;/a&gt;: We&amp;#8217;ll use this file to patch our 7.3.0 to 7.3.1 (the required version for EAP XP). I&amp;#8217;ll save it to &lt;code&gt;/tmp/jboss-eap-7.3.1-patch.zip&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform.xp&amp;#38;downloadType=distributions"&gt;&lt;strong&gt;Download JBoss EAP XP 1.0.0 Manager&lt;/strong&gt;&lt;/a&gt;: It&amp;#8217;s a JAR file. I&amp;#8217;ll also save this to &lt;code&gt;/tmp/jboss-eap-xp-1.0.0.GA-manager.jar&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;&lt;a href="#"&gt;Download Cumulative Patch Release for the JBoss EAP XP 1.0.0 Runtime Distribution&lt;/a&gt;&lt;/strong&gt;: I&amp;#8217;ll also save this to &lt;code&gt;/tmp/jboss-eap-xp-1.0.0-patch.zip&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;With our downloads complete, let&amp;#8217;s apply the patches:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Apply the patch to take EAP from 7.3.0 to 7.3.1 using the following command: &lt;pre&gt;$ /tmp/jboss-eap-7.3/bin/jboss-cli.sh "patch apply /tmp/jboss-eap-7.3.1-patch.zip"&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Set up the JBoss EAP Patch Manager: &lt;pre&gt;$ java -jar /tmp/jboss-eap-xp-1.0.0-manager.jar setup --jboss-home=/tmp/jboss-eap-7.3&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Apply the patch for JBoss EAP XP 1.0: &lt;pre&gt;$ /tmp/jboss-eap-7.3/bin/jboss-cli.sh "patch apply /tmp/jboss-eap-xp-1.0.0-patch.zip"&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Start JBoss EAP using the MicroProfile configuration that was installed as part of the patch, and enable metrics on the server: &lt;pre&gt;$ /tmp/jboss-eap-7.3/bin/standalone.sh -Dwildfly.statistics-enabled=true -c=standalone-microprofile.xml&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;With our new JBoss EAP plus MicroProfile server started, let&amp;#8217;s deploy a sample app. Open a separate terminal and:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Use Git to clone the Quickstarts repository to your local machine (I&amp;#8217;ll put it in &lt;code&gt;/tmp&lt;/code&gt; as well): &lt;pre&gt;$ git clone https://github.com/jboss-developer/jboss-eap-quickstarts /tmp/jboss-eap-quickstarts&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Build and deploy the sample &lt;code&gt;helloworld-rs&lt;/code&gt; (a simple RESTful app using JAX-RS) to the running JBoss EAP: &lt;pre&gt;$ mvn clean install wildfly:deploy -f /tmp/jboss-eap-quickstarts/helloworld-rs&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now that our sample app is deployed, let&amp;#8217;s try to access the MicroProfile Metrics API to gather metrics about our app and the server:&lt;/p&gt; &lt;pre&gt;$ curl -s http://localhost:9990/metrics # HELP jboss_undertow_request_count_total The number of requests this listener has served # TYPE jboss_undertow_request_count_total counter jboss_undertow_request_count_total{https_listener="https",server="default-server",microprofile_scope="vendor"} 0.0 jboss_undertow_request_count_total{http_listener="default",server="default-server",microprofile_scope="vendor"} 3.0 jboss_undertow_request_count_total{deployment="helloworld-rs.war",servlet="org.jboss.as.quickstarts.rshelloworld.JAXActivator",subdeployment="helloworld-rs.war",microprofile_scope="vendor"} 0.0 &lt;/pre&gt; &lt;p&gt;You&amp;#8217;ll see lots of metrics in the &lt;a target="_blank" rel="nofollow" href="https://openmetrics.io/"&gt;OpenMetrics format&lt;/a&gt; that JBoss EAP exposes. This output could later be hooked up to &lt;a target="_blank" rel="nofollow" href="https://prometheus.io/"&gt;Prometheus&lt;/a&gt; if you wanted to set up alerts on different metrics. We can filter based on scope and metric name to only show a subset for our app:&lt;/p&gt; &lt;pre&gt;$ curl -s http://localhost:9990/metrics/vendor/jboss_undertow_request_count | grep helloworld-rs.war jboss_undertow_request_count_total{deployment="helloworld-rs.war",servlet="org.jboss.as.quickstarts.rshelloworld.JAXActivator",subdeployment="helloworld-rs.war",microprofile_scope="vendor"} 0.0 &lt;/pre&gt; &lt;p&gt;This output shows us the metrics from the Undertow subsystem for our &lt;code&gt;helloworld-rs&lt;/code&gt; app, showing that there have been zero requests.&lt;/p&gt; &lt;p&gt;Now access the actual app itself one time:&lt;/p&gt; &lt;pre&gt;$ curl http://localhost:8080/helloworld-rs/rest/json {"result":"Hello World!"} &lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s access the MicroProfile Metrics again, expecting that the request count should be &lt;code&gt;1.0&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ curl -s http://localhost:9990/metrics/vendor/jboss_undertow_request_count | grep helloworld-rs.war jboss_undertow_request_count_total{deployment="helloworld-rs.war",servlet="org.jboss.as.quickstarts.rshelloworld.JAXActivator",subdeployment="helloworld-rs.war",microprofile_scope="vendor"} 1.0 &lt;/pre&gt; &lt;p&gt;Indeed it is (look at the end of the line for &lt;code&gt;1.0&lt;/code&gt;. Previously it was &lt;code&gt;0.0&lt;/code&gt;). Note that in order for metrics to be generated, you must remember to enable statistics on the server using &lt;code&gt;-Dwildfly.statistics-enabled=true&lt;/code&gt;.&lt;/p&gt; &lt;h3&gt;Using MicroProfile APIs&lt;/h3&gt; &lt;p&gt;In the previous example, we didn&amp;#8217;t actually type or use any MicroProfile APIs in the &lt;code&gt;helloworld-rs&lt;/code&gt; application. Instead, the core MicroProfile capabilities of JBoss EAP XP were reporting on standard metrics. Let&amp;#8217;s actually use one of the MicroProfile APIs for OpenAPI in our app.&lt;/p&gt; &lt;p&gt;JBoss EAP XP can generate OpenAPI documentation for applications, even without using OpenAPI. Run this &lt;code&gt;curl&lt;/code&gt; command to see what it generates for our app:&lt;/p&gt; &lt;pre&gt;$ curl http://localhost:8080/openapi --- openapi: 3.0.1 info: title: helloworld-rs.war version: "1.0" servers: - url: /helloworld-rs paths: /rest/json: get: responses: "200": description: OK content: application/json: schema: type: string /rest/xml: get: responses: "200": description: OK content: application/xml: schema: type: string &lt;/pre&gt; &lt;p&gt;This outputs the &lt;a target="_blank" rel="nofollow" href="https://swagger.io/specification/"&gt;OpenAPI-formatted&lt;/a&gt; documentation for our example REST APIs. While this is useful, let&amp;#8217;s improve it with MicroProfile OpenAPI!&lt;/p&gt; &lt;p&gt;Before we do that, we&amp;#8217;ll need to add the dependencies to our &lt;code&gt;pom.xml&lt;/code&gt;. First, add a &lt;code&gt;&amp;#60;dependencyManagement&amp;#62;&lt;/code&gt; element to pull in the MicroProfile Bill of Materials (BOM). Add this to the &lt;code&gt;pom.xml&lt;/code&gt; in the quickstart&amp;#8217;s base directory—in my case in &lt;code&gt;/tmp/jboss-eap-quickstarts/helloworld-rs/pom.xml&lt;/code&gt;—right before the existing &lt;code&gt;&amp;#60;dependency&amp;#62;&lt;/code&gt; block:&lt;/p&gt; &lt;pre&gt; &amp;#60;dependencyManagement&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.jboss.bom&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;jboss-eap-xp-microprofile&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;1.0.0.GA&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;pom&amp;#60;/type&amp;#62; &amp;#60;scope&amp;#62;import&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;/dependencies&amp;#62; &amp;#60;/dependencyManagement&amp;#62; &lt;/pre&gt; &lt;p&gt;Next, &lt;em&gt;inside&lt;/em&gt; of the &lt;code&gt;&amp;#60;dependency&amp;#62;&lt;/code&gt; block, add a new dependency for the MicroProfile OpenAPI:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;org.eclipse.microprofile.openapi&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;microprofile-openapi-api&amp;#60;/artifactId&amp;#62; &amp;#60;scope&amp;#62;provided&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;With our dependencies specified, we can now use the MicroProfile APIs. In the &lt;code&gt;src/main/java/org/jboss/as/quickstarts/rshelloworld/HelloWorld.java&lt;/code&gt; file, look for the &lt;code&gt;getHelloWorldJSON()&lt;/code&gt; method, and add the following line above the &lt;code&gt;@GET&lt;/code&gt; annotation:&lt;/p&gt; &lt;pre&gt;@Operation(description = "Get Helloworld as a JSON object") &lt;/pre&gt; &lt;p&gt;This adds a simple OpenAPI annotation that will add the description in the &lt;code&gt;/openapi&lt;/code&gt; output. You will also need to add a new import statement at the top of the file:&lt;/p&gt; &lt;pre&gt;import org.eclipse.microprofile.openapi.annotations.Operation; &lt;/pre&gt; &lt;p&gt;Save the file, and re-deploy the app with this command:&lt;/p&gt; &lt;pre&gt;$ mvn clean install wildfly:deploy -f /tmp/jboss-eap-quickstarts/helloworld-rs &lt;/pre&gt; &lt;p&gt;With the new OpenAPI-annotated app in place, access the OpenAPI endpoint once again:&lt;/p&gt; &lt;pre&gt;$ curl http://localhost:8080/openapi --- openapi: 3.0.1 info: title: helloworld-rs.war version: "1.0" servers: - url: /helloworld-rs paths: /rest/json: get: description: Get Helloworld as a JSON object responses: "200": description: OK content: application/json: schema: type: string /rest/xml: get: responses: "200": description: OK content: application/xml: schema: type: string &lt;/pre&gt; &lt;p&gt;You can see the new &lt;code&gt;description&lt;/code&gt; added in the docs for the &lt;code&gt;/rest/json&lt;/code&gt; endpoint. You can further enhance/complete your OpenAPI documentation by adding additional MicroProfile OpenAPI annotations. You will need to rebuild/redeploy for those changes to be reflected in the OpenAPI document.&lt;/p&gt; &lt;p&gt;There are many other MicroProfile APIs you can use to enhance your applications, ranging from fault tolerance, security with JWT, REST clients, and more. The &lt;a target="_blank" rel="nofollow" href="https://github.com/jboss-developer/jboss-eap-quickstarts/tree/xp-1.0.x"&gt;JBoss EAP XP Quickstarts&lt;/a&gt; illustrate how each is used to create Java microservices on JBoss EAP. Users of &lt;a target="_blank" rel="nofollow" href="https://www.redhat.com/en/technologies/jboss-middleware/codeready-studio"&gt;CodeReady Studio&lt;/a&gt; can also use MicroProfile APIs, as outlined in &lt;a href="https://developers.redhat.com/blog/2020/06/16/enable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Using JBoss EAP XP on OpenShift&lt;/h3&gt; &lt;p&gt;JBoss EAP XP is also available through OpenShift S2I images, just like JBoss EAP itself. Let&amp;#8217;s deploy an example. First, you&amp;#8217;ll need an OpenShift 4.x cluster that has access to registry.redhat.io, and the &lt;code&gt;oc&lt;/code&gt; command line, and be logged into your cluster. Then:&lt;/p&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol&gt; &lt;li&gt;Create a new project to house our app: &lt;pre&gt;$ oc new-project eap-demo&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Import the ImageStream definitions for XP on OpenJDK 11 (this requires cluster-admin privileges): &lt;pre&gt;$ oc replace --force -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-eap-openshift-templates/eap-xp1/jboss-eap-xp1-openjdk11-openshift.json&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Import the Templates that define how apps are deployed (this requires cluster-admin privileges): &lt;pre&gt;$ oc replace --force -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-eap-openshift-templates/eap-xp1/templates/eap-xp1-basic-s2i.json&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Create the app from the template: &lt;pre&gt;$ oc new-app --template=eap-xp1-basic-s2i -p APPLICATION_NAME=eap-demo \ -p EAP_IMAGE_NAME=jboss-eap-xp1-openjdk11-openshift:1.0 \ -p EAP_RUNTIME_IMAGE_NAME=jboss-eap-xp1-openjdk11-runtime-openshift:1.0 \ -p IMAGE_STREAM_NAMESPACE=openshift \ -p SOURCE_REPOSITORY_URL=https://github.com/jboss-developer/jboss-eap-quickstarts \ -p SOURCE_REPOSITORY_REF=7.3.x \ -p CONTEXT_DIR="helloworld-rs"&lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Two builds will run, one after the other, to build the app. &lt;pre&gt;$ oc logs -f bc/eap-demo-build-artifacts &amp;#38;&amp;#38; oc logs -f bc/eap-demo&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt; &lt;li style="list-style-type: none;"&gt; &lt;ol start="6"&gt; &lt;li&gt;After both builds complete, watch the rollout with: &lt;pre&gt;$ oc rollout status -w dc/eap-demo&lt;/pre&gt; &lt;p&gt;The build and rollout will take some time to finish.&lt;/li&gt; &lt;li&gt;Once the app is done building and deploying, access the same OpenAPI endpoint as before: &lt;pre&gt;$ curl -k https://$(oc get route eap-demo -o jsonpath="{.spec.host}")/openapi&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;You can also see the deployed app on the &lt;strong&gt;OpenShift Topology&lt;/strong&gt; view in the OpenShift Console:&lt;/p&gt; &lt;div id="attachment_734567" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-734567" class=" size-large wp-image-734567 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM-1024x573.png" src="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM-1024x573.png" alt="OpenShift Topology View with JBoss EAP Application" width="640" height="358" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM-1024x573.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM-300x168.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM-768x430.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/06/Screen-Shot-2020-06-16-at-10.25.14-AM.png 1310w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-734567" class="wp-caption-text"&gt;OpenShift Topology View with JBoss EAP Application&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Documentation&lt;/h2&gt; &lt;p&gt;The new &lt;a href="#"&gt;Using Eclipse MicroProfile in JBoss EAP&lt;/a&gt; guide can be found within the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/"&gt;JBoss EAP documentation&lt;/a&gt;. The guide covers important details about MicroProfile and how developers can quickly get started using MicroProfile APIs in their JBoss projects. You can also find important information about the release itself in the &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/red_hat_jboss_enterprise_application_platform_expansion_pack_1.0_release_notes/"&gt;Red Hat JBoss Enterprise Application Platform Expansion Pack 1.0 Release Notes&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Getting support for JBoss EAP XP&lt;/h2&gt; &lt;p&gt;Support for expansion packs is available to Red Hat customers through a subscription to Red Hat Runtimes. Contact your local Red Hat representative or Red Hat Sales for details on how you can enjoy world-class support offered from Red Hat and its worldwide partner network.&lt;/p&gt; &lt;p&gt;JBoss Enterprise Application Platform expansion pack (JBoss EAP XP or EAP XP) is subject to its own separate support policy and life cycle for closer alignment with Eclipse MicroProfile specification release cadence. JBoss EAP server instances with the EAP XP setup will be covered in their entirety by the new EAP XP policy and life cycle.&lt;/p&gt; &lt;p&gt;By setting up EAP XP, your server will be subject to the EAP XP support and life cycle policy. Please refer to the &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes"&gt;JBoss Enterprise Application Platform expansion pack Life Cycle page&lt;/a&gt; for more details.&lt;/p&gt; &lt;h2&gt;JBoss EAP XP resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/red_hat_jboss_enterprise_application_platform_expansion_pack_1.0_release_notes/"&gt;Red Hat JBoss Enterprise Application Platform Expansion Pack 1.0 Release Notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Using Eclipse MicroProfile in JBoss EAP&lt;/a&gt;&lt;/li&gt; &lt;li class="listitem"&gt;&lt;a class="link" target="_blank" rel="nofollow" href="https://access.redhat.com/support/policy/updates/jboss_eap_xp_notes"&gt;JBoss Enterprise Application Platform expansion pack Support and Life Cycle Policies&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://microprofile.io"&gt;MicroProfile Home&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a target="_blank" rel="nofollow" href="https://middlewareblog.redhat.com/category/microprofile/"&gt;MicroProfile on the Red Hat Blog&lt;/a&gt;&lt;/li&gt; &lt;li class="listitem"&gt;&lt;a class="link" target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/using_eclipse_microprofile_in_jboss_eap/index#installing-jboss-eap-xp-1-on-jboss-eap-730_default"&gt;Installing JBoss EAP XP 1.0 on JBoss EAP 7.3.0&lt;/a&gt;&lt;/li&gt; &lt;li class="listitem"&gt;&lt;a class="link" target="_blank" rel="nofollow" href="https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/using_eclipse_microprofile_in_jboss_eap/index#installing-jboss-eap-xp-1-on-jboss-eap-731_default"&gt;Installing JBoss EAP XP 1.0 on JBoss EAP 7.3.1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#38;linkname=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fred-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released%2F&amp;#038;title=Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%20expansion%20pack%201.0%20released" data-a2a-url="https://developers.redhat.com/blog/2020/06/17/red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released/" data-a2a-title="Red Hat JBoss Enterprise Application Platform expansion pack 1.0 released"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released/"&gt;Red Hat JBoss Enterprise Application Platform expansion pack 1.0 released&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/EwW43vSoYow" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat recently released the first Red Hat JBoss Enterprise Application Platform expansion pack (JBoss EAP XP) version 1.0. This version enables JBoss EAP developers to build Java microservices using Eclipse MicroProfile 3.3 APIs while continuing to also support Jakarta EE 8. This article goes into detail on the nature of this new offering and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released/"&gt;Red Hat JBoss Enterprise Application Platform expansion pack 1.0 released&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">731627</post-id><dc:creator>James Falkner</dc:creator><dc:date>2020-06-17T07:00:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/17/red-hat-jboss-enterprise-application-platform-expansion-pack-1-0-released/</feedburner:origLink></entry><entry><title>Support for GraphQL with Open Liberty 20.0.0.6</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/UGqWfpmEp9M/" /><category term="DevOps" /><category term="Java" /><category term="Kubernetes" /><category term="Microservices" /><category term="apache maven" /><category term="grafana dashboard" /><category term="java runtime" /><category term="openshift" /><category term="prometheus data" /><author><name>Yasmin.Aumeeruddy</name></author><id>https://developers.redhat.com/blog/?p=729187</id><updated>2020-06-17T07:00:16Z</updated><published>2020-06-17T07:00:16Z</published><content type="html">&lt;p&gt;The &lt;a href="https://github.com/OpenLiberty/open-liberty/releases"&gt;Open Liberty 20.0.0.6&lt;/a&gt; release brings new features, updates, and bug fixes. This article introduces the new features in Open Liberty 20.0.0.6, including support for developing &amp;#8220;code-first&amp;#8221; GraphQL applications, provisioning features from a Maven repository, and using a server configuration to control application startup.&lt;/p&gt; &lt;h2&gt;What&amp;#8217;s new in Open Liberty 20.0.0.6&lt;/h2&gt; &lt;p&gt;Open Liberty 20.0.0.6 includes the following feature updates, which I discuss in the next sections:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#GQL"&gt;Using GraphQL with Open Liberty&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#MVN"&gt;Provisioning features from a Maven repository&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#ORDER"&gt;Administrators control the application start order&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#GRA"&gt;New REST visualizations in Open Liberty Grafana dashboards&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#STA"&gt;Web application startup changes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Visit &lt;a href="https://github.com/OpenLiberty/open-liberty/issues?q=label%3Arelease%3A20006+label%3A%22release+bug%22+"&gt;Open Liberty&amp;#8217;s GitHub repository&lt;/a&gt; to learn about bug fixes in Open Liberty 20.0.0.6.&lt;/p&gt; &lt;p&gt;&lt;span id="more-729187"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Run your apps using Open Liberty 20.0.0.6&lt;/h2&gt; &lt;p&gt;Use the following command to get or update to Open Liberty 20.0.0.6 using &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/guides/maven-intro.html"&gt;Maven&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;  &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;io.openliberty&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;openliberty-runtime&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;20.0.0.6&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;zip&amp;#60;/type&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;p&gt;If you&amp;#8217;re using &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/guides/gradle-intro.html"&gt;Gradle&lt;/a&gt;, simply enter:&lt;/p&gt; &lt;pre&gt;dependencies { libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '[20.0.0.6,)' } &lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s the command for Docker:&lt;/p&gt; &lt;pre&gt;FROM open-liberty &lt;/pre&gt; &lt;p&gt;See the &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/downloads/"&gt;Open Liberty downloads page&lt;/a&gt; to get the latest release for Jakarta EE 8, Web Profile 8, and MicroProfile 3.&lt;/p&gt; &lt;h2 id="GQL"&gt;Using GraphQL with Open Liberty&lt;/h2&gt; &lt;p&gt;Open Liberty&amp;#8217;s support for &lt;a target="_blank" rel="nofollow" href="https://github.com/eclipse/microprofile-graphql"&gt;MicroProfile GraphQL&lt;/a&gt; lets developers write &amp;#8220;code-first&amp;#8221; GraphQL applications that put clients in control of the data they receive. You can use annotations like &lt;code&gt;@Query&lt;/code&gt; and &lt;code&gt;@Mutation&lt;/code&gt; to turn Plain Old Java Objects (POJOs) into HTTP-based GraphQL endpoints. When the query or mutation method returns an existing entity object, the client can specify the fields it is interested in—which reduces network bandwidth and client-side processing.&lt;/p&gt; &lt;p&gt;Here’s an example:&lt;/p&gt; &lt;pre&gt;@GraphQLApi public class MovieService { AtomicInteger nextId = new AtomicInteger(); Map&amp;#60;Integer, Movie&amp;#62; movieDB = new HashMap(); @Query("movieById") public Movie getMovieByID(int id) throws UnknownMovieException { return Optional.ofNullable(movieDB.get(id)).orElseThrow(UnknownMovieException::new); } @Query("allMoviesDirectedBy") public List&amp;#60;Movie&amp;#62; getAllMoviesWithDirector(String directorName) { return movieDB.values().stream() .filter(m -&amp;#62; m.getDirector().equals(directorName)) .collect(Collectors.toList()); } @Mutation("newMovie") public int createNewMovie(@Name("movie") Movie movie) { int id = nextId.incrementAndGet(); movie.setId(id); movieDB.put(id, movie); return id; } } &lt;/pre&gt; &lt;p&gt;This code creates a GraphQL application with two queries (&lt;code&gt;movieById&lt;/code&gt; and &lt;code&gt;allMoviesDirectedBy&lt;/code&gt;) and a mutation (&lt;code&gt;newMovie&lt;/code&gt;). If the client executes the following query:&lt;/p&gt; &lt;pre&gt;query { allMoviesDirectedBy(directorName: "Roland Emmerich") { id, title, actors } } &lt;/pre&gt; &lt;p&gt;The result will be:&lt;/p&gt; &lt;pre&gt;{ "data": { "allMoviesDirectedBy": [ { "id": 1, "title": "Independence Day", "actors": [ "Will Smith", "Bill Pullman", "Jeff Goldblum", ... ] }, ... ] } } &lt;/pre&gt; &lt;p&gt;Open Liberty’s GraphQL APIs were developed within the MicroProfile community and have broad industry support. The implementation is based on SmallRye GraphQL. Liberty’s GraphQL feature goes beyond the MicroProfile specification and adds support for collecting metrics, checking authorizations, and logging requests and responses to query and mutation methods.&lt;/p&gt; &lt;p&gt;For more details and a sample application, see this &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/sample-mp-graphql"&gt;simple demo of the MicroProfile GraphQL capabilities in Open Liberty&lt;/a&gt;. Join the growing &lt;a target="_blank" rel="nofollow" href="https://landscape.graphql.org/"&gt;landscape of GraphQL adopters&lt;/a&gt; and write your first GraphQL application today!&lt;/p&gt; &lt;h2 id="MVN"&gt;Provisioning features from a Maven repository&lt;/h2&gt; &lt;p&gt;Developers can now use a convenient command-line tool to install features from the Maven Central repository or an on-premises Maven repository (such as one served on Artifactory or Nexus) directly onto an Open Liberty runtime. Table 1 details using the &lt;code&gt;wlp/bin/featureUtility&lt;/code&gt; commands to find, install, and get information about assets in a Maven repository.&lt;/p&gt; &lt;h4&gt;Table 1. Open Liberty commands to install features from a Maven repository&lt;/h4&gt; &lt;table&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;b&gt;Command&lt;/b&gt;&lt;/td&gt; &lt;td&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility help installFeature&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Display help information for the &lt;code&gt;installFeature&lt;/code&gt; action.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installFeature mpHealth-2.2&lt;/code&gt; or &lt;code&gt;featureUtility installFeature io.openliberty.features:mpHealth-2.2&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install the MicroProfile Health 2.2 feature from Maven Central.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installServerFeatures myserver&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install server features for the &lt;code&gt;myserver&lt;/code&gt; server.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installFeature mpHealth-2.2 --noCache&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install the MicroProfile Health 2.2 feature without caching the feature to the local Maven repository.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installServerFeatures myserver --noCache&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install server features for the &lt;code&gt;myserver&lt;/code&gt; server without caching the features to the local Maven repository.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installFeature adminCenter-1.0 --acceptLicense&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install the Admin Center feature from Maven Central.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility installServerFeatures defaultServer --verbose&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Install features for the &lt;code&gt;myserver&lt;/code&gt; server with debugging enabled.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility viewSettings&lt;/code&gt;&lt;/td&gt; &lt;td&gt;View a template of your &lt;code&gt;featureUtility.properties&lt;/code&gt; file.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility find mpHealth-2.2&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Search for the MicroProfile Health 2.2 feature from Maven Central and all configured Maven repositories.&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;code&gt;featureUtility find&lt;/code&gt;&lt;/td&gt; &lt;td&gt;Search for all available features from Maven Central and all configured Maven repositories.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h2 id="ORDER"&gt;Administrators control the application start order&lt;/h2&gt; &lt;p&gt;By default, applications start in parallel and can finish starting in random order. With the 20.0.0.6 release, Open Liberty empowers administrators to prevent an application from starting until one or more other applications have started.&lt;/p&gt; &lt;p&gt;Being able to define the order of application startup is critical because applications are often dependent on each other. For example, a single Open Liberty server might contain a front-end application that provides a user interface and a back-end application that accesses a database. Having the front-end application available before the back end started could result in errors. With this feature, you could prevent the front-end application from starting until the back end was ready.&lt;/p&gt; &lt;p&gt;You only need to define the application dependencies in the configuration, using the &lt;code&gt;startAfter&lt;/code&gt; attribute on the &lt;code&gt;application&lt;/code&gt; element. In this example, you would add a comma-separated list of ID values for the back-end applications that must start before the front-end application can run:&lt;/p&gt; &lt;pre&gt; &amp;#60;webApplication id="frontend" location="myFrontend.war" startAfter="backend1, backend2"/&amp;#62; &amp;#60;enterpriseApplication id="backend1" location="myBackend.ear"/&amp;#62; &amp;#60;enterpriseApplication id="backend2" location="myUtilities.ear"/&amp;#62; &lt;/pre&gt; &lt;h2 id="GRA"&gt;REST visualizations in Open Liberty Grafana dashboards&lt;/h2&gt; &lt;p&gt;Grafana dashboards provide a wide range of time-series visualizations of MicroProfile Metrics data such as CPU, REST, servlet, connection pool, and garbage collection metrics. Grafana dashboards are powered by a Prometheus data source, which is configured to ingest data from the &lt;code&gt;/metrics&lt;/code&gt; endpoint of one or more Open Liberty servers. As a result, users can view the metrics on Grafana dashboards in near real-time.&lt;/p&gt; &lt;p&gt;With the release of &lt;code&gt;mpMetrics-2.3&lt;/code&gt; and its addition of JAX-RS metrics, we&amp;#8217;ve introduced a new set of visualizations to our Open Liberty Grafana dashboards. You can find these under a new tab labeled &lt;b&gt;REST&lt;/b&gt;. We&amp;#8217;ve also added hover-over descriptions that provide a brief summary of each visualization and its function. These updates apply to &lt;a target="_blank" rel="nofollow" href="https://docs.okd.io/3.11/welcome/index.html"&gt;OKD 3.11&lt;/a&gt; (the upstream distribution of &lt;a href="https://developers.redhat.com/openshift"&gt;Red Hat OpenShift&lt;/a&gt;), &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;Red Hat OpenShift Container Platform&lt;/a&gt; (OCP), and standalone Open Liberty instances.&lt;/p&gt; &lt;p&gt;If you do not already have Grafana and Prometheus set up in your development environment, see the Kabanero guide for &lt;a target="_blank" rel="nofollow" href="https://kabanero.io/guides/app-monitoring-ocp4.2/"&gt;Red Hat OpenShift Container Platform 4.3&lt;/a&gt;. To get started using the Grafana dashboard with Open Liberty, see my blog post introducing &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/blog/2020/04/09/microprofile-3-3-open-liberty-20004.html#gra"&gt;Open Liberty&amp;#8217;s support for MicroProfile 3.3&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can find the Grafana dashboards for Open Liberty on OKD or OCP in the &lt;a target="_blank" rel="nofollow" href="https://github.com/OpenLiberty/open-liberty-operator/tree/master/deploy/dashboards/metrics"&gt;open-liberty-operator repository&lt;/a&gt;.&lt;/p&gt; &lt;h2 id="STA"&gt;Web application startup changes&lt;/h2&gt; &lt;p&gt;Starting with Open Liberty 20.0.0.6, web applications are considered started only after calls to &lt;code&gt;ServletContainerInitializers&lt;/code&gt; and &lt;code&gt;ServletContextListeners&lt;/code&gt; have completed. This update effectively moves more of the application initialization process into the server-startup route. As a result, it might appear that applications and the server take longer to start. The change doesn&amp;#8217;t affect how long it takes for applications to begin processing requests; it just moves it to run prior to the opening of the ports. In addition, you can now configure the &lt;code&gt;server.xml&lt;/code&gt; so that a failure in a &lt;code&gt;ServletContextListener&lt;/code&gt; will cause application startup to fail. Just add the following:&lt;/p&gt; &lt;pre&gt;&amp;#60;webContainer stopAppStartUponListenerException="true"/&amp;#62; &lt;/pre&gt; &lt;p style="padding-left: 40px;"&gt;&lt;b&gt;Note&lt;/b&gt;: Find out more &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/docs/ref/config/#application.html"&gt;about application properties here&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Open Liberty 20.0.0.6 is available through &lt;a target="_blank" rel="nofollow" href="https://openliberty.io/downloads/"&gt;Maven, Gradle, Docker, and as a downloadable archive&lt;/a&gt;. Get it today to begin using the new features I&amp;#8217;ve described in this article.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#38;linkname=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F17%2Fsupport-for-graphql-with-open-liberty-20-0-0-6%2F&amp;#038;title=Support%20for%20GraphQL%20with%20Open%20Liberty%2020.0.0.6" data-a2a-url="https://developers.redhat.com/blog/2020/06/17/support-for-graphql-with-open-liberty-20-0-0-6/" data-a2a-title="Support for GraphQL with Open Liberty 20.0.0.6"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/support-for-graphql-with-open-liberty-20-0-0-6/"&gt;Support for GraphQL with Open Liberty 20.0.0.6&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/UGqWfpmEp9M" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The Open Liberty 20.0.0.6 release brings new features, updates, and bug fixes. This article introduces the new features in Open Liberty 20.0.0.6, including support for developing &amp;#8220;code-first&amp;#8221; GraphQL applications, provisioning features from a Maven repository, and using a server configuration to control application startup. What&amp;#8217;s new in Open Liberty 20.0.0.6 Open Liberty 20.0.0.6 includes the [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/17/support-for-graphql-with-open-liberty-20-0-0-6/"&gt;Support for GraphQL with Open Liberty 20.0.0.6&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">729187</post-id><dc:creator>Yasmin.Aumeeruddy</dc:creator><dc:date>2020-06-17T07:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/17/support-for-graphql-with-open-liberty-20-0-0-6/</feedburner:origLink></entry><entry><title>Infinispan Native Server Image</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LgA3VTJy_pg/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="native" scheme="searchisko:content:tags" /><category term="quarkus" scheme="searchisko:content:tags" /><author><name>Ryan Emerson</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_native_server_image</id><updated>2020-06-19T21:38:50Z</updated><published>2020-06-16T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Starting with Infinispan 11, it’s now possible to create a natively compiled version of the Infinispan server.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_tldr"&gt;&lt;a class="anchor" href="#_tldr" /&gt;TL;DR&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We have a new image that contains a natively compiled Infinispan server and has a footprint of only 286MB. Try it now:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 quay.io/infinispan/server-native:11.0&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_infinispan_quarkus_extensions"&gt;&lt;a class="anchor" href="#_infinispan_quarkus_extensions" /&gt;Infinispan Quarkus Extensions&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="https://quarkus.io/"&gt;Quarkus&lt;/a&gt; provides built in support for generating native executables, providing several abstractions to improve the development experience of creating native binaries. Building upon the &lt;a href="https://infinispan.org/blog/2019/11/11/serverng/"&gt;new server&lt;/a&gt;, the Infinispan team have created a &lt;a href="https://github.com/infinispan/infinispan-quarkus"&gt;Quarkus extension&lt;/a&gt; for both embedded and server use-cases. These extensions allow a native binary version of the server to be compiled and ran by simply executing:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;mvn clean install -Dnative ./server-runner/target/infinispan-quarkus-server-runner-11.0.0.Final-runner -Dquarkus.infinispan-server.config-file=infinispan.xml \ -Dquarkus.infinispan-server.config-path=server/conf \ -Dquarkus.infinispan-server.data-path=data \ -Dquarkus.infinispan-server.server-path=/opt/infinispan &amp;amp;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_native_server_image"&gt;&lt;a class="anchor" href="#_native_server_image" /&gt;Native Server Image&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For many developers compiling your own Infinispan native binary manually is not desirable, therefore we provide the &lt;code&gt;infinispan/server-native&lt;/code&gt; image that uses a native server binary. The advantage of this over our JVM based &lt;code&gt;infinispan/server&lt;/code&gt; image is that we can no provide a much smaller image, 286 vs 468 MB, as we no longer need to include an openjdk JVM in the image.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The &lt;code&gt;server-native&lt;/code&gt; image is configured exactly the same as the JVM based &lt;code&gt;infinispan/server&lt;/code&gt; image. We can run an authenticated Infinispan server with a single user with the following command:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;docker run -p 11222:11222 -e USER="user" -e PASS="pass" quay.io/infinispan/server-native:11.0&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;From the output below, you can see the Quarkus banner as well various &lt;code&gt;io.quarkus&lt;/code&gt; logs indicating which extensions are being used.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre&gt;################################################################################ # # # IDENTITIES_PATH not specified # # Generating Identities yaml using USER and PASS env vars. # ################################################################################ 2020-06-16 09:27:39,638 INFO [io.quarkus] (main) config-generator 2.0.0.Final native (powered by Quarkus 1.5.0.Final) started in 0.069s. 2020-06-16 09:27:39,643 INFO [io.quarkus] (main) Profile prod activated. 2020-06-16 09:27:39,643 INFO [io.quarkus] (main) Installed features: [cdi, qute] 2020-06-16 09:27:39,671 INFO [io.quarkus] (main) config-generator stopped in 0.001s 2020-06-16 09:27:40,306 INFO [ListenerBean] (main) The application is starting... 2020-06-16 09:27:40,481 INFO [org.inf.CONTAINER] (main) ISPN000128: Infinispan version: Infinispan 'Corona Extra' 11.0.0.Final 2020-06-16 09:27:40,489 INFO [org.inf.CLUSTER] (main) ISPN000078: Starting JGroups channel infinispan with stack image-tcp 2020-06-16 09:27:45,560 INFO [org.inf.CLUSTER] (main) ISPN000094: Received new cluster view for channel infinispan: [82914efa63fe-12913|0] (1) [82914efa63fe-12913] 2020-06-16 09:27:45,562 INFO [org.inf.CLUSTER] (main) ISPN000079: Channel infinispan local address is 82914efa63fe-12913, physical addresses are [10.0.2.100:7800] 2020-06-16 09:27:45,566 INFO [org.inf.CONTAINER] (main) ISPN000390: Persisted state, version=11.0.0.Final timestamp=2020-06-16T09:27:45.563303Z 2020-06-16 09:27:45,584 INFO [org.inf.CONTAINER] (main) ISPN000104: Using EmbeddedTransactionManager 2020-06-16 09:27:45,617 INFO [org.inf.SERVER] (ForkJoinPool.commonPool-worker-3) ISPN080018: Protocol HotRod (internal) 2020-06-16 09:27:45,618 INFO [org.inf.SERVER] (main) ISPN080018: Protocol REST (internal) 2020-06-16 09:27:45,629 INFO [org.inf.SERVER] (main) ISPN080004: Protocol SINGLE_PORT listening on 10.0.2.100:11222 2020-06-16 09:27:45,629 INFO [org.inf.SERVER] (main) ISPN080034: Server '82914efa63fe-12913' listening on http://10.0.2.100:11222 2020-06-16 09:27:45,629 INFO [org.inf.SERVER] (main) ISPN080001: Infinispan Server 11.0.0.Final started in 5457ms 2020-06-16 09:27:45,629 INFO [io.quarkus] (main) infinispan-quarkus-server-runner 11.0.0.Final native (powered by Quarkus 1.5.0.Final) started in 5.618s. 2020-06-16 09:27:45,629 INFO [io.quarkus] (main) Profile prod activated. 2020-06-16 09:27:45,629 INFO [io.quarkus] (main) Installed features: [cdi, infinispan-embedded, infinispan-server]&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_further_reading"&gt;&lt;a class="anchor" href="#_further_reading" /&gt;Further Reading&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For more detailed information abou how to use the &lt;code&gt;infinispan/server&lt;/code&gt; and &lt;code&gt;infinispan/server-native&lt;/code&gt; image, please consult the &lt;a href="https://github.com/infinispan/infinispan-images/blob/master/README.md"&gt;official documentation&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us" /&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The Quarkus extension and the &lt;code&gt;server-native&lt;/code&gt; image are currently provided as a tech preview, so please try them out and let us know if you run into any issues.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please &lt;a href="http://infinispan.org/download/"&gt;download&lt;/a&gt;, &lt;a href="https://issues.jboss.org/projects/ISPN"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LgA3VTJy_pg" height="1" width="1" alt=""/&gt;</content><summary>Starting with Infinispan 11, it’s now possible to create a natively compiled version of the Infinispan server. TL;DR We have a new image that contains a natively compiled Infinispan server and has a footprint of only 286MB. Try it now: docker run -p 11222:11222 quay.io/infinispan/server-native:11.0 Infinispan Quarkus Extensions Quarkus provides built in support for generating native executables, p...</summary><dc:creator>Ryan Emerson</dc:creator><dc:date>2020-06-16T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/06/16/native-server-announce/</feedburner:origLink></entry><entry><title>Enable Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform 7.3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ymljsPxTiCY/" /><category term="Containers" /><category term="DevOps" /><category term="Java" /><category term="Microservices" /><category term="CodeReady Studio" /><category term="jboss" /><category term="MicroProfile" /><category term="OpenTracing" /><author><name>Emmanuel Hugonnet</name></author><id>https://developers.redhat.com/blog/?p=722437</id><updated>2020-06-16T07:00:49Z</updated><published>2020-06-16T07:00:49Z</published><content type="html">&lt;p&gt;In this article, we show you how to install &lt;a href="https://developers.redhat.com/products/eap/overview"&gt;Red Hat JBoss Enterprise Application Platform (JBoss EAP)&lt;/a&gt; XP 1.0.0.GA and enable Eclipse MicroProfile support on JBoss EAP. Once you have MicroProfile support enabled, you can start using the quickstart examples or start developing your own application.&lt;/p&gt; &lt;p&gt;You can find a demo video at the end of this article.&lt;/p&gt; &lt;p&gt;&lt;span id="more-722437"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Installing JBoss EAP XP 1.0.0.GA&lt;/h2&gt; &lt;p&gt;To install &lt;a target="_blank" rel="nofollow" href="https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?product=appplatform.xp&amp;#38;downloadType=distributions"&gt;JBoss EAP XP 1.0.0.GA&lt;/a&gt;:&lt;/p&gt; &lt;ol&gt; &lt;li class="listitem"&gt; &lt;p class="simpara"&gt;Download the following software from the product download page:&lt;/p&gt; &lt;div class="itemizedlist"&gt; &lt;ul class="itemizedlist" type="disc"&gt; &lt;li class="listitem"&gt;JBoss EAP XP manager&lt;/li&gt; &lt;li class="listitem"&gt;JBoss EAP 7.3.1 GA patch&lt;/li&gt; &lt;li class="listitem"&gt;JBoss EAP XP 1.0&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li class="listitem"&gt; &lt;p class="simpara"&gt;Apply the JBoss EAP 7.3.1 GA patch:&lt;/p&gt; &lt;pre class="screen"&gt;$ patch apply /&lt;span class="emphasis"&gt;&lt;em&gt;DOWNLOAD/PATH&lt;/em&gt;&lt;/span&gt;/jboss-eap-7.3.1-patch.zip&lt;/pre&gt; &lt;/li&gt; &lt;li class="listitem"&gt; &lt;p class="simpara"&gt;Set up JBoss EAP XP manager using the following CLI command:&lt;/p&gt; &lt;pre class="screen"&gt;$ java -jar jboss-eap-xp-1.0.0.GA-CR1-manager.jar setup --jboss-home=/INSTALL_PATH/jboss-eap-7.3&lt;/pre&gt; &lt;/li&gt; &lt;li class="listitem"&gt; &lt;p class="simpara"&gt;Apply the JBoss EAP XP 1.0 patch using the following management command:&lt;/p&gt; &lt;pre class="screen"&gt;$ patch apply /&lt;span class="emphasis"&gt;&lt;em&gt;DOWNLOAD/PATH&lt;/em&gt;&lt;/span&gt;/jboss-eap-xp-1.0.0.GA-patch.zip&lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Configure CodeReady Studio&lt;/h2&gt; &lt;p&gt;To enable Eclipse MicroProfile support on JBoss EAP, we first need to register a new runtime server for JBoss EAP XP 1.0.0 (which we just installed). For this, we will create a new JBoss EAP 7.3.0 server called Red Hat JBoss EAP 7.3 XP 1.0.&lt;/p&gt; &lt;p&gt;This server will use a newly created JBoss EAP 7.3 XP 1.0 Runtime that points to the newly installed runtime and uses the &lt;code&gt;standalone-microprofile.xml&lt;/code&gt; configuration file. Set up the &lt;strong&gt;New Server&lt;/strong&gt; dialog box as shown in Figure 1:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Select server type &lt;strong&gt;Red Hat JBoss Enterprise Application Platform 7.3&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Set &lt;strong&gt;Server&amp;#8217;s host name&lt;/strong&gt; to &lt;code&gt;localhost&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;In &lt;strong&gt;Server name&lt;/strong&gt;, enter &lt;code&gt;Red Hat JBoss EAP 7.3 XP 1.0&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Next&lt;/strong&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_723207" style="width: 631px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-723207" class="wp-image-723207 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_1.png" alt="New Server dialog box with the specified options selected" width="621" height="590" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_1.png 621w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_1-300x285.png 300w" sizes="(max-width: 621px) 100vw, 621px" /&gt;&lt;p id="caption-attachment-723207" class="wp-caption-text"&gt;Figure 1: Define your new server.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In the next dialog box, configure your new server as shown in Figure 2:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Set the &lt;strong&gt;Home Directory&lt;/strong&gt; if you don&amp;#8217;t want to use the default setting.&lt;/li&gt; &lt;li&gt;Make sure your &lt;strong&gt;Execution Environment&lt;/strong&gt; is set to &lt;strong&gt;JavaSE-1.8&lt;/strong&gt;.&lt;/li&gt; &lt;li&gt;Change the settings for &lt;strong&gt;Server base directory&lt;/strong&gt; and &lt;strong&gt;Configuration file&lt;/strong&gt; if you don&amp;#8217;t want the defaults.&lt;/li&gt; &lt;li&gt;Click &lt;strong&gt;Finish&lt;/strong&gt;.&lt;/li&gt; &lt;/ol&gt; &lt;div id="attachment_723197" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2.png"&gt;&lt;img aria-describedby="caption-attachment-723197" class="wp-image-723197 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2-1024x561.png" alt="New Server dialog box for configuring the JBoss Runtime" width="640" height="351" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2-1024x561.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2-300x164.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2-768x421.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/create_server_2.png 1077w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723197" class="wp-caption-text"&gt;Figure 2: Configure your new server.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In order to use the &lt;strong&gt;microprofile-opentracing&lt;/strong&gt; quickstart (Figure 5) we need to set environment variables on our runtime. To do so, in the Red Hat JBoss EAP 7.3 XP 1.0 server &lt;strong&gt;Overview&lt;/strong&gt; dialog box shown in Figure 3, click &lt;strong&gt;Open launch configuration&lt;/strong&gt;.&lt;/p&gt; &lt;div id="attachment_723247" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1.png"&gt;&lt;img aria-describedby="caption-attachment-723247" class="wp-image-723247 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1-1024x672.png" alt="dialog box showing an overview of the server's settings" width="640" height="420" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1-1024x672.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1-300x197.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1-768x504.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_1.png 1340w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723247" class="wp-caption-text"&gt;Figure 3: Set environment variables from the server Overview dialog box.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;In particular, you need to create three environment variables as shown in Figure 4:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;JAEGER_REPORTER_LOG_SPANS&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;JAEGER_SAMPLER_PARAM&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;JAEGER_SAMPLER_TYPE&lt;/code&gt; set to &lt;code&gt;const&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div id="attachment_723257" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_2.png"&gt;&lt;img aria-describedby="caption-attachment-723257" class="wp-image-723257" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_2.png" alt="dialog box showing the newly created environment variables" width="640" height="648" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_2.png 950w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_2-296x300.png 296w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/server_environment_2-768x778.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-723257" class="wp-caption-text"&gt;Figure 4: Configure your runtime&amp;#8217;s environment variables.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Use the quickstarts&lt;/h2&gt; &lt;p&gt;Select the Quickstart Parent &lt;code&gt;pom.xml&lt;/code&gt; to import it as shown in Figure 5, and you are ready to go.&lt;/p&gt; &lt;div id="attachment_723537" style="width: 648px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-723537" class="wp-image-723537 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/import_quickstarts.png" alt="Project Explorer with quickstart-parent selected." width="638" height="466" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/import_quickstarts.png 638w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/import_quickstarts-300x219.png 300w" sizes="(max-width: 638px) 100vw, 638px" /&gt;&lt;p id="caption-attachment-723537" class="wp-caption-text"&gt;Figure 5: Import quickstart-parent to turn on kickstarts.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;With the kickstarts turned on, you have simple examples that you can run and test on your installed server covering:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Eclipse MicroProfile Config&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile Fault-tolerance&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile Health&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile JWT&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile Metrics&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile OpenAPI&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile OpenTracing&lt;/li&gt; &lt;li&gt;Eclipse MicroProfile REST Client&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about Eclipse MicroProfile take a look at &lt;a href="https://projects.eclipse.org/projects/technology.microprofile/releases/microprofile-3.3"&gt;the specifications&lt;/a&gt;, check out &lt;a target="_blank" rel="nofollow" href="https://start.microprofile.io/"&gt;MicroProfile Starter&lt;/a&gt;. If you prefer to watch a demo, check it out here:&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/5sblsEHFQu4?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#38;linkname=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3%2F&amp;#038;title=Enable%20Eclipse%20MicroProfile%20applications%20on%20Red%20Hat%20JBoss%20Enterprise%20Application%20Platform%207.3" data-a2a-url="https://developers.redhat.com/blog/2020/06/16/enable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3/" data-a2a-title="Enable Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform 7.3"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/16/enable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3/"&gt;Enable Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform 7.3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ymljsPxTiCY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, we show you how to install Red Hat JBoss Enterprise Application Platform (JBoss EAP) XP 1.0.0.GA and enable Eclipse MicroProfile support on JBoss EAP. Once you have MicroProfile support enabled, you can start using the quickstart examples or start developing your own application. You can find a demo video at the end [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/16/enable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3/"&gt;Enable Eclipse MicroProfile applications on Red Hat JBoss Enterprise Application Platform 7.3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">722437</post-id><dc:creator>Emmanuel Hugonnet</dc:creator><dc:date>2020-06-16T07:00:49Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/16/enable-eclipse-microprofile-applications-on-red-hat-jboss-enterprise-application-platform-7-3/</feedburner:origLink></entry><entry><title>Enterprise Kubernetes development with odo: The CLI tool for developers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/gXynXpeiVwY/" /><category term="CI/CD" /><category term="Developer Tools" /><category term="Java" /><category term="Kubernetes" /><category term="Node.js" /><category term="Programming Languages" /><category term="application deployment" /><category term="command-line tool" /><category term="debug application" /><category term="kubernetes development" /><category term="openshift do" /><author><name>Jason Dudash</name></author><id>https://developers.redhat.com/blog/?p=726577</id><updated>2020-06-16T07:00:41Z</updated><published>2020-06-16T07:00:41Z</published><content type="html">&lt;p&gt;Kubernetes conversations rarely center the developer&amp;#8217;s perspective. As a result, doing our job in a k8s cluster often requires building complicated YAML resource files, writing custom shell scripts, and understanding the countless options that are available in &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;docker&lt;/code&gt; commands. On top of all of that, we have the learning curve of understanding Kubernetes terminology and using it the way that operations teams do.&lt;/p&gt; &lt;p&gt;To address these challenges, the Red Hat Developer Tools team created &lt;a href="https://developers.redhat.com/products/odo/overview"&gt;&lt;code&gt;odo&lt;/code&gt; (OpenShift Do)&lt;/a&gt;, a command-line interface (CLI) tool built for developers and designed to prioritize the things that developers care about. In this article, I will use a hands-on example to introduce you to the benefits of using &lt;code&gt;odo&lt;/code&gt; in conjunction with Kubernetes.&lt;/p&gt; &lt;h2&gt;Improving the developer workflow&lt;/h2&gt; &lt;p&gt;First, let&amp;#8217;s consider a typical workflow for a developer whose team has adopted &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;. The workflow starts with local development activities and finishes with &lt;a href="https://developers.redhat.com/topics/containers/"&gt;containers&lt;/a&gt; deployed and code running in one or more Kubernetes clusters. To help visualize this flow, you can think of it in terms of an inner loop and an outer loop. The &lt;i&gt;inner loop&lt;/i&gt; consists of local coding, building, running, and testing the application—all activities that you, as a developer, can control. The &lt;i&gt;outer loop&lt;/i&gt; consists of the larger team processes that your code flows through on its way to the cluster: code reviews, integration tests, security and compliance, and so on. The inner loop could happen mostly on your laptop. The outer loop happens on shared servers and runs in containers, and is often automated with continuous integration/continuous delivery (CI/CD) pipelines. Usually, a code commit to source control is the transition point between the inner and outer loops. Figure 1 illustrates the interplay of these loops in a Kubernetes development process.&lt;/p&gt; &lt;div id="attachment_720877" style="width: 455px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/To-Staging.png"&gt;&lt;img aria-describedby="caption-attachment-720877" class="wp-image-720877 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/To-Staging.png" alt="A flow diagram of the inner and outer loops in a Kubernetes development process." width="445" height="439" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/To-Staging.png 445w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/To-Staging-300x296.png 300w" sizes="(max-width: 445px) 100vw, 445px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-720877" class="wp-caption-text"&gt;Figure 1. A flow diagram of the inner and outer loops in a Kubernetes development process.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Notice that, while you code, you are constantly iterating through various development activities: You code, build, deploy locally, and debug—and you keep going until you achieve a degree of feature completeness. At some point, you will be ready to transition from inner to outer, right? Not so quick.&lt;/p&gt; &lt;h3&gt;Deploying from the inner loop&lt;/h3&gt; &lt;p&gt;You might think that your job stops at local testing and a Git pull request (or a &lt;code&gt;git push&lt;/code&gt;)—but that&amp;#8217;s not usually the case. You will still need to ensure that your code functions correctly in containers, runs in the cluster, and plays nicely with other containerized components. Therefore, you will want some iterations of your inner loop to deploy and debug directly into the Kubernetes cluster.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s a list of steps you might typically follow to deploy from the inner loop:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Describe how to configure the OS for your container: &lt;ul&gt; &lt;li&gt;Write a Dockerfile to set up Linux.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Describe how to package your app into a container image: &lt;ul&gt; &lt;li&gt;Update the Dockerfile.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Create a container image: &lt;ul&gt; &lt;li&gt;Issue the commands &lt;code&gt;docker build&lt;/code&gt; and &lt;code&gt;docker tag&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Upload the container image to a registry: &lt;ul&gt; &lt;li&gt;Issue a &lt;code&gt;docker push.&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Write one or more Kubernetes or OpenShift resource files: &lt;ul&gt; &lt;li&gt;Write lots of YAML.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Deploy your app to the cluster: &lt;ul&gt; &lt;li&gt;Issue the command: &lt;code&gt;kubectl apply -f my_app.yaml&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Deploy other services to the cluster: &lt;ul&gt; &lt;li&gt;Issue the command: &lt;code&gt;kubectl apply -f svc*.yaml&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Write the config (or set &lt;code&gt;ENV&lt;/code&gt;) to allow apps to work together: &lt;ul&gt; &lt;li&gt;Issue a &lt;code&gt;kubectl create configmap&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Configure apps to work together correctly: &lt;ul&gt; &lt;li&gt;Issue a &lt;code&gt;kubectl apply -f my_configmap.yaml&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;That&amp;#8217;s a lot of steps!&lt;/p&gt; &lt;h3&gt;Enter, odo&lt;/h3&gt; &lt;p&gt;Red Hat OpenShift&amp;#8217;s &lt;code&gt;oc&lt;/code&gt; CLI tool can help make many of those steps easier; however, &lt;code&gt;oc&lt;/code&gt; is operations focused. Using it requires a deep understanding of Kubernetes and OpenShift concepts. Odo, on the other hand, was designed to be simple and concise:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Its syntax and design center concepts familiar to developers, such as projects, applications, and components.&lt;/li&gt; &lt;li&gt;It automates the creation of deployment configurations, build configurations, service routes, and other OpenShift elements.&lt;/li&gt; &lt;li&gt;It is designed for quick iterations—as an example, it detects changes to local code and deploys to the cluster automatically, giving developers instant feedback to validate changes in realtime.&lt;/li&gt; &lt;li&gt;It is completely client-based, so no server-side-component setup is required.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Odo also offers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat support for &lt;a href="https://developers.redhat.com/blog/category/node-js/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; components.&lt;/li&gt; &lt;li&gt;Compatibility with other languages such as Ruby, Perl, PHP, and Python.&lt;/li&gt; &lt;li&gt;Status updates for components and services on the cluster.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Odo works from any terminal on the Windows, macOS, and Linux operating systems, and it supports autocompletion for &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt; command-line shells.&lt;/p&gt; &lt;p&gt;That&amp;#8217;s enough overview. Let&amp;#8217;s see &lt;code&gt;odo&lt;/code&gt; in action.&lt;/p&gt; &lt;h2&gt;Hands-on development with Odo&lt;/h2&gt; &lt;p&gt;If you want to follow along with this example, start by &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.4/cli_reference/openshift_developer_cli/installing-odo.html"&gt;downloading &lt;code&gt;odo&lt;/code&gt; for your platform of choice&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For macOS, the command is:&lt;/p&gt; &lt;pre&gt;&amp;#62; curl -L https://mirror.openshift.com/pub/openshift-v4/clients/odo/latest/odo-darwin-amd64 -o /usr/local/bin/odo &amp;#38;&amp;#38; chmod +x /usr/local/bin/odo &lt;/pre&gt; &lt;p&gt;For Linux, it&amp;#8217;s:&lt;/p&gt; &lt;pre&gt;&amp;#62; curl -L https://mirror.openshift.com/pub/openshift-v4/clients/odo/latest/odo-linux-amd64 -o /usr/local/bin/odo &amp;#38;&amp;#38; chmod +x /usr/local/bin/odo &lt;/pre&gt; &lt;p&gt;Next, &lt;a target="_blank" rel="nofollow" href="https://github.com/RedHatGov/openshift-workshops.git"&gt;clone the example source code&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#62; git clone https://github.com/RedHatGov/openshift-workshops.git &amp;#62; cd openshift-workshops/dc-metro-map &lt;/pre&gt; &lt;p&gt;If you aren&amp;#8217;t already logged in to your cluster with &lt;code&gt;oc&lt;/code&gt;, run this and enter your login info:&lt;/p&gt; &lt;pre&gt;&amp;#62; odo login https://api.yourcluster.com:6443 &lt;/pre&gt; &lt;p&gt;Alternatively, you could use the following link to get a token-based login (note that you must update the URL with your cluster&amp;#8217;s domain name): &lt;code&gt;https://oauth-openshift.apps.yourcluster.com/oauth/token/display&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;We now have a setup for a sample Node.js application. In the next sections, I&amp;#8217;ll show you how to use &lt;code&gt;odo&lt;/code&gt; to deploy the app to a Kubernetes cluster; configure and connect the app to other services; and update an environment variable and verify the changes in a web browser. I&amp;#8217;ll conclude by showing you how to do a simple code change and quickly iterate through the development process before propagating your local code back into the Kubernetes cluster.&lt;/p&gt; &lt;h3&gt;Part 1: Deploy the app&lt;/h3&gt; &lt;p&gt;The first thing you&amp;#8217;ll do is set up a new project and deploy it on a Kubernetes cluster.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create a project that only you can work in by entering a command similar to the one below: &lt;pre&gt;&amp;#62; odo project create jasons-odo &lt;/pre&gt; &lt;p&gt;You should see output similar to mine below:&lt;/p&gt; &lt;pre&gt;✓ Project 'jasons-odo' is ready for use ✓ New project created and now using project: jasons-odo &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Create a Node.js component for the new project: &lt;pre&gt;&amp;#62; odo create nodejs &lt;/pre&gt; &lt;p&gt;The output should look something like this:&lt;/p&gt; &lt;pre&gt;✓ Validating component [61ms] Please use `odo push` command to create the component with source deployed &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Push the changes—in this case, a new component and the example application code—to the cluster: &lt;pre&gt;&amp;#62; odo push &lt;/pre&gt; &lt;p&gt;You should see something like this:&lt;/p&gt; &lt;pre&gt;Validation ✓ Checking component [116ms] Configuration changes ✓ Initializing component ✓ Creating component [336ms] Pushing to component nodejs-dc-metro-map-zvff of type local ✓ Checking files for pushing [2ms] ✓ Waiting for component to start [1m] ✓ Syncing files to the component [7s] ✓ Building component [32s] ✓ Changes successfully pushed to component &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;The code is now running in a container on the cluster. But we also want to create a URL route into the code so that we can view the running application in a web browser. Next steps:&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;Expose an HTTP route into your Node.js app: &lt;pre&gt;&amp;#62; odo url create --port 8080&lt;/pre&gt; &lt;p&gt;Check the output:&lt;/p&gt; &lt;pre&gt;✓ URL nodejs-dc-metro-map-zvff-8080 created for component: nodejs-dc-metro-map-zvff To create URL on the OpenShift Cluster, please use `odo push` &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Push the new URL change to the cluster: &lt;pre&gt;&amp;#62; odo push &lt;/pre&gt; &lt;p&gt;Check the output:&lt;/p&gt; &lt;pre&gt;Validation ✓ Checking component [88ms] Configuration changes ✓ Retrieving component data [107ms] ✓ Applying configuration [107ms] Applying URL changes ✓ URL nodejs-dc-metro-map-zvff-8080: http://nodejs-dc-metro-map-zvff-8080-app-jasons-odo.apps.yourcluster.com created Pushing to component nodejs-dc-metro-map-zvff of type local ✓ Checking file changes for pushing [7ms] ✓ No file changes detected, skipping build. Use the '-f' flag to force the build. &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;To verify that the deployment has worked, locate the URL in the command output just shown (or run &lt;code&gt;odo url list&lt;/code&gt;) and try opening it in your web browser. You should see something like the map in Figure 2.&lt;/p&gt; &lt;div id="attachment_720847" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1.png"&gt;&lt;img aria-describedby="caption-attachment-720847" class="wp-image-720847 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1-1024x860.png" alt="A map of transit stops in Washington DC's Federal Triangle." width="640" height="538" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1-1024x860.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1-300x252.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1-768x645.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-1.png 1600w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-720847" class="wp-caption-text"&gt;Figure 2. A map of transit stops in Washington D.C.&amp;#8217;s Federal Triangle.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Part 2: Configure and connect the app to other services&lt;/h3&gt; &lt;p&gt;Next, you&amp;#8217;ll use &lt;code&gt;odo&lt;/code&gt; to add a database dependency to your Node.js app. For this to work, your cluster will need to have both OpenShift &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.4/applications/service_brokers/installing-service-catalog.html"&gt; Service Catalog&lt;/a&gt; and &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.4/applications/service_brokers/installing-template-service-broker.html"&gt;Template Service Broker&lt;/a&gt; installed.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Create the database and pass-in the defaults for config variables: &lt;pre&gt;&amp;#62; odo service create mongodb-persistent --plan default --wait \ -p DATABASE_SERVICE_NAME=mongodb -p MEMORY_LIMIT=512Mi \ -p MONGODB_DATABASE=sampledb -p VOLUME_CAPACITY=1Gi &lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s the output:&lt;/p&gt; &lt;pre&gt;Deploying service mongodb-persistent of type: mongodb-persistent ✓ Deploying service [55ms] ✓ Waiting for service to come up [3m] ✓ Service 'mongodb-persistent' is ready for use &lt;/pre&gt; &lt;p&gt;Optionally, link &lt;code&gt;mongodb-persistent&lt;/code&gt; to your component by running: &lt;code&gt;odo link&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;Provide your Node.js app with the database credentials and other secrets needed to configure and connect to the database: &lt;pre&gt;&amp;#62; odo link mongodb-persistent &lt;/pre&gt; &lt;p&gt;You should see something like the following output:&lt;/p&gt; &lt;pre&gt;✓ Service mongodb-persistent has been successfully linked to the component nodejs-dc-metro-map-zvff The below secret environment variables were added to the 'nodejs-dc-metro-map-zvff' component: admin_password database_name password uri username You can now access the environment variables from within the component pod, for example: $uri is now available as a variable within component nodejs-dc-metro-map-zvff &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;h3&gt;Part 3: Update the environment variables&lt;/h3&gt; &lt;p&gt;Let&amp;#8217;s say you need to update some &lt;code&gt;env vars&lt;/code&gt; for your containerized Node.js app. Doing that with &lt;code&gt;odo&lt;/code&gt; is really straightforward.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Tell &lt;code&gt;odo&lt;/code&gt; what &lt;code&gt;env var&lt;/code&gt; to add or update: &lt;pre&gt;&amp;#62; odo config set --env BEERME=true &lt;/pre&gt; &lt;p&gt;You should see something like the following output:&lt;/p&gt; &lt;pre&gt; ✓ Environment variables were successfully updated Run `odo push --config` command to apply changes to the cluster. &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Push the changes with the new &lt;code&gt;env var&lt;/code&gt; to the cluster: &lt;pre&gt;&amp;#62; odo push --config &lt;/pre&gt; &lt;p&gt;You should see something like this:&lt;/p&gt; &lt;pre&gt;Validation ✓ Checking component [84ms] Configuration changes ✓ Retrieving component data [96ms] ✓ Applying configuration [40s] Applying URL changes ✓ URL nodejs-dc-metro-map-zvff-8080 already exists &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now refresh the page in your web browser. You&amp;#8217;ll see that the new &lt;code&gt;env&lt;/code&gt; has taken effect. Your map icons should now look like pint glasses, as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_720857" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2.png"&gt;&lt;img aria-describedby="caption-attachment-720857" class="wp-image-720857 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2-1024x938.png" alt="The updated map shows the effect of changing the environment variable." width="640" height="586" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2-1024x938.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2-300x275.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2-768x703.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-2.png 1352w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-720857" class="wp-caption-text"&gt;Figure 3. The updated map icons verify that changing the environment variable worked.&lt;/p&gt;&lt;/div&gt; &lt;h3&gt;Part 4: Iterate the inner loop&lt;/h3&gt; &lt;p&gt;In this last part, I&amp;#8217;ll show you how to do a simple code change with &lt;code&gt;odo&lt;/code&gt;. I&amp;#8217;ll also demonstrate how iterating on your inner loop easily propagates local code into the cluster deployment.&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Edit the local file &lt;code&gt;public/assets/stations.geojson&lt;/code&gt; to add a new bus stop. Append it to the bottom of the file, right after Ronald Reagan Washington National Airport: &lt;pre&gt;&amp;#62; vim public/assets/stations.geojson { "type": "Feature", "properties": { "name": "Presidential Metro Stop", "marker-color": "#ffd700", "marker-symbol": "rail-metro", "line": "blue" }, "geometry": { "type": "Point", "coordinates": [ -77.0365, 38.8977 ] } } &lt;/pre&gt; &lt;/li&gt; &lt;li&gt;Push changes to the cluster: &lt;pre&gt;&amp;#62; odo push&lt;/pre&gt; &lt;p&gt;You should see the following output:&lt;/p&gt; &lt;pre&gt;Validation ✓ Checking component [86ms] Configuration changes ✓ Retrieving component data [96ms] ✓ Applying configuration [114ms] Applying URL changes ✓ URL nodejs-dc-metro-map-zvff-8080 already exists Pushing to component nodejs-dc-metro-map-zvff of type local ✓ Checking file changes for pushing [3ms] ✓ Waiting for component to start [23ms] ✓ Syncing files to the component [1s] ✓ Building component [3s] ✓ Changes successfully pushed to component &lt;/pre&gt; &lt;/li&gt; &lt;/ol&gt; &lt;p&gt;Now, refresh the web page. You should see that there&amp;#8217;s a new transit stop for the White House, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_720867" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3.png"&gt;&lt;img aria-describedby="caption-attachment-720867" class="wp-image-720867 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3-1024x751.png" alt="An updated map with a new bus icon located at the White House." width="640" height="469" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3-1024x751.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3-300x220.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3-768x563.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2020/05/Map-3.png 1584w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-720867" class="wp-caption-text"&gt;Figure 4. The updated map shows that code changes have been successfully pushed to the deployed cluster.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, I showed you how to use &lt;code&gt;odo&lt;/code&gt; for a variety of day-to-day development activities (what I call the inner loop of a Kubernetes-based development process). I also showed you how to deploy and debug iterations of your inner loop directly into the Kubernetes cluster.&lt;/p&gt; &lt;p&gt;We completed all of the tasks required to develop and deploy the example application without writing any YAML, without &lt;code&gt;bash&lt;/code&gt; scripts, and without needing to understand the deep concepts of Kubernetes operations. Instead, we used the CLI and just a handful of commands—&lt;code&gt;odo&lt;/code&gt;, &lt;code&gt;project&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;service&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;config&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Odo can do a few things I didn&amp;#8217;t cover in this article. See the &lt;a target="_blank" rel="nofollow" href="https://docs.openshift.com/container-platform/4.4/cli_reference/openshift_developer_cli/understanding-odo.html"&gt;official odo documentation&lt;/a&gt; to learn more about its full capabilities.&lt;/p&gt; &lt;p&gt;Also, if you liked the concepts in this article but really don&amp;#8217;t like using a CLI, Red Hat has you covered. We&amp;#8217;ve embedded &lt;code&gt;odo&lt;/code&gt; into a &lt;a target="_blank" rel="nofollow" href="https://marketplace.visualstudio.com/items?itemName=redhat.vscode-openshift-connector"&gt;VS Code plugin&lt;/a&gt; and a &lt;a target="_blank" rel="nofollow" href="https://plugins.jetbrains.com/plugin/12030-openshift-connector-by-red-hat"&gt;JetBrains plugin&lt;/a&gt;, so that you can get the same capability directly in an IDE.&lt;/p&gt; &lt;p&gt;Odo is just one of the awesome tools that Red Hat has been working on to make it easier for developers to build modern applications with open source software. Stay tuned for more articles introducing these tools that are tailored just for developers.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#38;linkname=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F06%2F16%2Fenterprise-kubernetes-development-with-odo-the-cli-tool-for-developers%2F&amp;#038;title=Enterprise%20Kubernetes%20development%20with%20odo%3A%20The%20CLI%20tool%20for%20developers" data-a2a-url="https://developers.redhat.com/blog/2020/06/16/enterprise-kubernetes-development-with-odo-the-cli-tool-for-developers/" data-a2a-title="Enterprise Kubernetes development with odo: The CLI tool for developers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/16/enterprise-kubernetes-development-with-odo-the-cli-tool-for-developers/"&gt;Enterprise Kubernetes development with odo: The CLI tool for developers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/gXynXpeiVwY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Kubernetes conversations rarely center the developer&amp;#8217;s perspective. As a result, doing our job in a k8s cluster often requires building complicated YAML resource files, writing custom shell scripts, and understanding the countless options that are available in kubectl and docker commands. On top of all of that, we have the learning curve of understanding Kubernetes [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/06/16/enterprise-kubernetes-development-with-odo-the-cli-tool-for-developers/"&gt;Enterprise Kubernetes development with odo: The CLI tool for developers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;</summary><post-id xmlns="com-wordpress:feed-additions:1">726577</post-id><dc:creator>Jason Dudash</dc:creator><dc:date>2020-06-16T07:00:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/06/16/enterprise-kubernetes-development-with-odo-the-cli-tool-for-developers/</feedburner:origLink></entry></feed>
